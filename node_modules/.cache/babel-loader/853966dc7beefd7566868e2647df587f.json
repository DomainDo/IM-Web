{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\conversation\\current-conversation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\conversation\\current-conversation.vue","mtime":1649851412186},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851412081},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState } from 'vuex';\nimport MessageSendBox from \"../message/message-send-box\";\nimport MessageItem from \"../message/message-item\";\nimport ConversationProfile from \"./conversation-profile.vue\";\nimport MemberProfileCard from \"../group/member-profile-card\";\nimport MessageMerger from \"../message/merger-message/message-merger\";\nimport MessageRelay from \"../message/merger-message/message-relay\";\nimport FriendProfile from \"../friend/friend-container\";\nimport close from \"../../assets/image/close.png\";\nexport default {\n  name: 'CurrentConversation',\n  components: {\n    MessageSendBox: MessageSendBox,\n    MessageItem: MessageItem,\n    ConversationProfile: ConversationProfile,\n    MemberProfileCard: MemberProfileCard,\n    MessageMerger: MessageMerger,\n    MessageRelay: MessageRelay,\n    FriendProfile: FriendProfile\n  },\n  data: function data() {\n    return {\n      close: close,\n      isShowScrollButtomTips: false,\n      preScrollHeight: 0,\n      showConversationProfile: false,\n      timeout: '',\n      checkList: [],\n      // selectMessage: false,\n      selectedMessageList: [],\n      mergerMessagePop: false,\n      mergerMessage: null,\n      positionX: 0,\n      positionY: 0\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUnreadCount: function currentUnreadCount(state) {\n      return state.conversation.currentConversation.unreadCount;\n    },\n    currentMessageList: function currentMessageList(state) {\n      return state.conversation.currentMessageList;\n    },\n    isCompleted: function isCompleted(state) {\n      return state.conversation.isCompleted;\n    },\n    mergerMessageList: function mergerMessageList(state) {\n      return state.conversation.mergerMessageList;\n    },\n    isShowConversationList: function isShowConversationList(state) {\n      return state.conversation.isShowConversationList;\n    },\n    selectMessage: function selectMessage(state) {\n      return state.conversation.selectMessage;\n    },\n    friendContent: function friendContent(state) {\n      return state.friend.friendContent;\n    }\n  })), mapGetters(['toAccount', 'hidden'])), {}, {\n    // 是否显示当前会话组件\n    showCurrentConversation: function showCurrentConversation() {\n      return !!this.currentConversation.conversationID;\n    },\n    showFriendContent: function showFriendContent() {\n      return this.friendContent;\n    },\n    name: function name() {\n      if (this.currentConversation.type === 'C2C') {\n        // let name = this.currentConversation.userProfile.nick || this.toAccount\n        // let list = this.currentMessageList\n        // let len = list.length\n        // for (let i = len - 1; i >= 0; i--) {\n        //   // C2C 会话对端更新nick时需要更新会话title\n        //   if (list[i].flow === 'in' && list[i].nick && name !== list[i].nick) {\n        //     name = list[i].nick\n        //     break\n        //   }\n        // }\n        return this.currentConversation.remark || this.currentConversation.userProfile.nick || this.currentConversation.userProfile.userID;\n      } else if (this.currentConversation.type === 'GROUP') {\n        return this.currentConversation.groupProfile.name || this.toAccount;\n      } else if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n        return '系统通知';\n      }\n\n      return this.toAccount;\n    },\n    showMessageSendBox: function showMessageSendBox() {\n      return this.currentConversation.type !== this.TIM.TYPES.CONV_SYSTEM;\n    },\n    mergerTitle: function mergerTitle() {\n      if (this.mergerMessage) {\n        return this.mergerMessage.payload.title || '聊天记录';\n      } else {\n        return '聊天记录';\n      }\n    }\n  }),\n  mounted: function mounted() {\n    if (this.$refs.dropdown && this.$refs.dropdown.$el) {\n      this.$refs.dropdown.$el.addEventListener('mousedown', this.move);\n    }\n\n    this.$bus.$on('image-loaded', this.onImageLoaded);\n    this.$bus.$on('scroll-bottom', this.scrollMessageListToButtom);\n    this.$bus.$on('mergerSelected', this.mergerSelectedHandler);\n    this.$bus.$on('mergerMessageShow', this.mergerShow);\n\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\n      return false;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$refs.dropdown && this.$refs.dropdown.$el) {\n      this.$refs.dropdown.$el.removeEventListener('mousedown', this.move);\n    }\n  },\n  updated: function updated() {\n    this.keepMessageListOnButtom(); // 1. 系统会话隐藏右侧资料组件\n    // 2. 没有当前会话时，隐藏右侧资料组件。\n    //    背景：退出群组/删除会话时，会出现一处空白区域\n\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM' || typeof this.currentConversation.conversationID === 'undefined') {\n      this.showConversationProfile = false;\n    }\n  },\n  watch: {\n    currentUnreadCount: function currentUnreadCount(next) {\n      if (!this.hidden && next > 0) {\n        this.tim.setMessageRead({\n          conversationID: this.currentConversation.conversationID\n        });\n      }\n    },\n    hidden: function hidden(next) {\n      if (!next && this.currentUnreadCount > 0) {\n        this.tim.setMessageRead({\n          conversationID: this.currentConversation.conversationID\n        });\n      }\n    }\n  },\n  methods: {\n    move: function move(e) {\n      var _this = this;\n\n      var odiv = this.$refs.dropdown.$el.children[0]; //e.target        //获取目标元素\n      //算出鼠标相对元素的位置\n\n      var disX = e.clientX - odiv.offsetLeft;\n      var disY = e.clientY - odiv.offsetTop;\n\n      document.onmousemove = function (e) {\n        //鼠标按下并移动的事件\n        //用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\n        var left = e.clientX - disX;\n        var top = e.clientY - disY; //绑定元素位置到positionX和positionY上面\n\n        _this.positionX = top;\n        _this.positionY = left; //移动当前元素\n\n        odiv.style.left = left + 'px';\n        odiv.style.top = top + 'px';\n      };\n\n      document.onmouseup = function () {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n    },\n    mergerMessageBack: function mergerMessageBack() {\n      var index = this.mergerMessageList.length - 2;\n      this.$store.commit('updateMergerMessage', this.mergerMessageList[index]); // this.mergerMessageList.pop()\n    },\n    closeMessagePop: function closeMessagePop() {\n      this.mergerMessagePop = false;\n      this.$store.commit('resetMergerMessage');\n    },\n    closeSelectMessage: function closeSelectMessage() {\n      this.$store.commit('resetSelectedMessage', false);\n    },\n    mergerSelectedHandler: function mergerSelectedHandler() {\n      this.selectedMessageList = [];\n      this.checkList = [];\n      this.$store.commit('setSelectedMessage', true);\n    },\n    mergerShow: function mergerShow(value) {\n      this.mergerMessagePop = true;\n      this.mergerMessage = value;\n      this.$store.commit('setMergerMessage', value);\n    },\n    mergerRelay: function mergerRelay() {\n      this.selectedMessage();\n      this.$store.commit('setRelayType', 3);\n    },\n    singleRelay: function singleRelay() {\n      this.selectedMessage();\n      this.$store.commit('setRelayType', 2);\n    },\n    selectedMessage: function selectedMessage() {\n      var _this2 = this;\n\n      var messageList = [];\n      this.selectedMessageList = [];\n      this.checkList.forEach(function (id) {\n        messageList = _this2.currentMessageList.find(function (item) {\n          return item.ID === id;\n        });\n\n        _this2.selectedMessageList.push(messageList);\n      });\n      this.$store.commit('showConversationList', true); //this.closeSelectMessage() // TODO\n\n      this.$store.commit('setSelectedMessageList', this.selectedMessageList);\n    },\n    onScroll: function onScroll(_ref) {\n      var scrollTop = _ref.target.scrollTop;\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      }\n\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n        this.isShowScrollButtomTips = false;\n      }\n    },\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n    keepMessageListOnButtom: function keepMessageListOnButtom() {\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      } // 距离底部20px内强制滚到底部,否则提示有新消息\n\n\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n        this.$nextTick(function () {\n          messageListNode.scrollTop = messageListNode.scrollHeight;\n        });\n        this.isShowScrollButtomTips = false;\n      } else {\n        this.isShowScrollButtomTips = true;\n      }\n\n      this.preScrollHeight = messageListNode.scrollHeight;\n    },\n    // 直接滚到底部\n    scrollMessageListToButtom: function scrollMessageListToButtom() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        var messageListNode = _this3.$refs['message-list'];\n\n        if (!messageListNode) {\n          return;\n        }\n\n        messageListNode.scrollTop = messageListNode.scrollHeight;\n        _this3.preScrollHeight = messageListNode.scrollHeight;\n        _this3.isShowScrollButtomTips = false;\n      });\n    },\n    showMore: function showMore() {\n      this.showConversationProfile = !this.showConversationProfile;\n    },\n    onImageLoaded: function onImageLoaded() {\n      this.keepMessageListOnButtom();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,6BADA;AAEAC;AACAC,kCADA;AAEAC,4BAFA;AAGAC,4CAHA;AAIAC,wCAJA;AAKAC,gCALA;AAMAC,8BANA;AAOAC;AAPA,GAFA;AAWAC,MAXA,kBAWA;AACA;AACAC,kBADA;AAEAC,mCAFA;AAGAC,wBAHA;AAIAC,oCAJA;AAKAC,iBALA;AAMAC,mBANA;AAOA;AACAC,6BARA;AASAC,6BATA;AAUAC,yBAVA;AAWAC,kBAXA;AAYAC;AAZA;AAcA,GA1BA;AA2BAC,0DACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA,KAFA;AAGAC;AAAA;AAAA,KAHA;AAIAC;AAAA;AAAA,KAJA;AAKAC;AAAA;AAAA,KALA;AAMAC;AAAA;AAAA,KANA;AAOAC;AAAA;AAAA,KAPA;AAQAC;AAAA;AAAA;AARA,IADA,GAWAC,mCAXA;AAYA;AACAC,2BAbA,qCAaA;AACA;AACA,KAfA;AAgBAC,qBAhBA,+BAgBA;AACA;AACA,KAlBA;AAmBAjC,QAnBA,kBAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAbA,MAaA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA,KAvCA;AAwCAkC,sBAxCA,gCAwCA;AACA;AACA,KA1CA;AA2CAC,eA3CA,yBA2CA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AAjDA,IA3BA;AA+EAC,SA/EA,qBA+EA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,GA5FA;AA6FAC,eA7FA,2BA6FA;AACA;AACA;AACA;AACA,GAjGA;AAkGAC,SAlGA,qBAkGA;AACA,mCADA,CAEA;AACA;AACA;;AACA,qEACA,8DADA,EACA;AACA;AACA;AACA,GA3GA;AA4GAC;AACAf,sBADA,8BACAgB,IADA,EACA;AACA;AACA;AAAAC;AAAA;AACA;AACA,KALA;AAMAC,UANA,kBAMAF,IANA,EAMA;AACA;AACA;AAAAC;AAAA;AACA;AACA;AAVA,GA5GA;AAwHAE;AACAC,QADA,gBACAC,CADA,EACA;AAAA;;AACA,qDADA,CACA;AACA;;AACA;AACA;;AACAC;AAAA;AACA;AACA;AACA,mCAHA,CAKA;;AACA;AACA,+BAPA,CASA;;AACAC;AACAA;AACA,OAZA;;AAaAD;AACAA;AACAA;AACA,OAHA;AAIA,KAvBA;AAwBAE,qBAxBA,+BAwBA;AACA;AACA,+EAFA,CAGA;AACA,KA5BA;AA6BAC,mBA7BA,6BA6BA;AACA;AACA;AACA,KAhCA;AAiCAC,sBAjCA,gCAiCA;AACA;AACA,KAnCA;AAoCAC,yBApCA,mCAoCA;AACA;AACA;AACA;AACA,KAxCA;AAyCAC,cAzCA,sBAyCAC,KAzCA,EAyCA;AACA;AACA;AACA;AACA,KA7CA;AA8CAC,eA9CA,yBA8CA;AACA;AACA;AACA,KAjDA;AAkDAC,eAlDA,yBAkDA;AACA;AACA;AACA,KArDA;AAsDAC,mBAtDA,6BAsDA;AAAA;;AACA;AACA;AACA;AACAC;AACA;AACA,SAFA;;AAGA;AACA,OALA;AAOA,uDAVA,CAWA;;AACA;AACA,KAnEA;AAoEAC,YApEA,0BAoEA;AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KA5EA;AA6EA;AACAC,2BA9EA,qCA8EA;AACA;;AACA;AACA;AACA,OAJA,CAKA;;;AACA;AACA;AACAC;AACA,SAFA;AAGA;AACA,OALA,MAKA;AACA;AACA;;AACA;AACA,KA7FA;AA8FA;AACAC,6BA/FA,uCA+FA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACAD;AACA;AACA;AACA,OARA;AASA,KAzGA;AA0GAE,YA1GA,sBA0GA;AACA;AACA,KA5GA;AA6GAC,iBA7GA,2BA6GA;AACA;AACA;AA/GA;AAxHA","names":["name","components","MessageSendBox","MessageItem","ConversationProfile","MemberProfileCard","MessageMerger","MessageRelay","FriendProfile","data","close","isShowScrollButtomTips","preScrollHeight","showConversationProfile","timeout","checkList","selectedMessageList","mergerMessagePop","mergerMessage","positionX","positionY","computed","mapState","currentConversation","currentUnreadCount","currentMessageList","isCompleted","mergerMessageList","isShowConversationList","selectMessage","friendContent","mapGetters","showCurrentConversation","showFriendContent","showMessageSendBox","mergerTitle","mounted","beforeDestroy","updated","watch","next","conversationID","hidden","methods","move","e","document","odiv","mergerMessageBack","closeMessagePop","closeSelectMessage","mergerSelectedHandler","mergerShow","value","mergerRelay","singleRelay","selectedMessage","messageList","onScroll","keepMessageListOnButtom","messageListNode","scrollMessageListToButtom","showMore","onImageLoaded"],"sourceRoot":"src/components/conversation","sources":["current-conversation.vue"],"sourcesContent":["<template>\r\n  <div class=\"current-conversation-wrapper\">\r\n    <FriendProfile style=\"position: relative\"/>\r\n    <div class=\"current-conversation\" @scroll=\"onScroll\" v-if=\"showCurrentConversation\">\r\n      <div class=\"header\">\r\n        <div class=\"name\">{{ name }}</div>\r\n        <div class=\"btn-more-info\"\r\n          :class=\"showConversationProfile ? '' : 'left-arrow'\"\r\n          @click=\"showMore\"\r\n          v-show=\"!currentConversation.conversationID.includes('SYSTEM')\"\r\n          title=\"查看详细信息\">\r\n        </div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"message-list\" ref=\"message-list\" @scroll=\"this.onScroll\">\r\n          <div class=\"more\" v-if=\"!isCompleted\">\r\n            <el-button\r\n              type=\"text\"\r\n              @click=\"$store.dispatch('getMessageList', currentConversation.conversationID)\"\r\n            >查看更多</el-button>\r\n          </div>\r\n          <div class=\"no-more\" v-else>没有更多了</div>\r\n          <el-checkbox-group v-model=\"checkList\" v-if=\"selectMessage\">\r\n            <el-checkbox :label=\"message.ID\" v-for=\"message in currentMessageList\" :key=\"message.ID\" :disabled=\"message.status==='fail'\">\r\n              <message-item   :message=\"message\"/>\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n          <message-item v-else v-for=\"message in currentMessageList\" :key=\"message.ID\" :message=\"message\"/>\r\n        </div>\r\n        <div v-show=\"isShowScrollButtomTips\" class=\"newMessageTips\" @click=\"scrollMessageListToButtom\">回到最新位置</div>\r\n      </div>\r\n      <div class=\"footer\" v-if=\"showMessageSendBox\" >\r\n        <div class=\"merger-btn\"  v-if=\"selectMessage\">\r\n          <div  class=\"relay-btn\" @click=\"singleRelay\">\r\n            <img class=\"relay-icon\" src=\"../../assets/image/sig-relay.png\">\r\n            <span class=\"relay-title\">逐条转发</span>\r\n          </div>\r\n          <div  class=\"relay-btn\" @click=\"mergerRelay\">\r\n            <img class=\"relay-icon\" src=\"../../assets/image/merger-relay.png\">\r\n            <span class=\"relay-title\">合并转发</span>\r\n          </div>\r\n          <div  class=\"relay-btn\" @click=\"closeSelectMessage\">\r\n            <img class=\"relay-icon\" src=\"../../assets/image/close-relay.png\">\r\n            <span class=\"relay-title\">取消</span>\r\n          </div>\r\n        </div>\r\n        <message-send-box v-else/>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <message-relay v-if=\"isShowConversationList \"></message-relay>\r\n    </div>\r\n    <div class=\"profile\" v-if=\"showConversationProfile\" >\r\n      <conversation-profile/>\r\n    </div>\r\n    <!-- 群成员资料组件 -->\r\n    <member-profile-card />\r\n      <el-popover\r\n              ref=\"dropdown\"\r\n              placement=\"left-start\"\r\n              width=\"700\"\r\n              v-model=\"mergerMessagePop\">\r\n         <div class=\"pop-header\">\r\n           <img src=\"../../assets/image/back.png\" v-if=\"mergerMessageList.length >1\" class=\"pop-back\" @click=\"mergerMessageBack\"/>\r\n           <span  class=\"title\">{{mergerTitle}}</span>\r\n           <img src=\"../../assets/image/close.png\" class=\"pop-close\" @click=\"closeMessagePop\"/>\r\n         </div>\r\n        <transition\r\n                name=\"custom-classes-transition\"\r\n                enter-active-class=\"animated fadeIn\"\r\n                leave-active-class=\"animated fadeOut\"\r\n        >\r\n         <message-merger v-if=\"mergerMessagePop\"></message-merger>\r\n        </transition>\r\n      </el-popover>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from 'vuex'\r\nimport MessageSendBox from '../message/message-send-box'\r\nimport MessageItem from '../message/message-item'\r\nimport ConversationProfile from './conversation-profile.vue'\r\nimport MemberProfileCard from '../group/member-profile-card'\r\nimport MessageMerger from '../message/merger-message/message-merger'\r\nimport MessageRelay from '../message/merger-message/message-relay'\r\nimport FriendProfile from '../friend/friend-container'\r\nimport close from '../../assets/image/close.png'\r\n\r\nexport default {\r\n  name: 'CurrentConversation',\r\n  components: {\r\n    MessageSendBox,\r\n    MessageItem,\r\n    ConversationProfile,\r\n    MemberProfileCard,\r\n    MessageMerger,\r\n    MessageRelay,\r\n    FriendProfile\r\n  },\r\n  data() {\r\n    return {\r\n      close: close,\r\n      isShowScrollButtomTips: false,\r\n      preScrollHeight: 0,\r\n      showConversationProfile: false,\r\n      timeout: '',\r\n      checkList: [],\r\n      // selectMessage: false,\r\n      selectedMessageList: [],\r\n      mergerMessagePop: false,\r\n      mergerMessage: null,\r\n      positionX: 0,\r\n      positionY: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUnreadCount: state => state.conversation.currentConversation.unreadCount,\r\n      currentMessageList: state => state.conversation.currentMessageList,\r\n      isCompleted: state => state.conversation.isCompleted,\r\n      mergerMessageList: state => state.conversation.mergerMessageList,\r\n      isShowConversationList: state => state.conversation.isShowConversationList,\r\n      selectMessage: state => state.conversation.selectMessage,\r\n      friendContent: state => state.friend.friendContent,\r\n    }),\r\n    ...mapGetters(['toAccount', 'hidden']),\r\n    // 是否显示当前会话组件\r\n    showCurrentConversation() {\r\n      return !!this.currentConversation.conversationID\r\n    },\r\n    showFriendContent() {\r\n      return this.friendContent\r\n    },\r\n    name() {\r\n      if (this.currentConversation.type === 'C2C') {\r\n        // let name = this.currentConversation.userProfile.nick || this.toAccount\r\n        // let list = this.currentMessageList\r\n        // let len = list.length\r\n        // for (let i = len - 1; i >= 0; i--) {\r\n        //   // C2C 会话对端更新nick时需要更新会话title\r\n        //   if (list[i].flow === 'in' && list[i].nick && name !== list[i].nick) {\r\n        //     name = list[i].nick\r\n        //     break\r\n        //   }\r\n        // }\r\n        return this.currentConversation.remark || this.currentConversation.userProfile.nick || this.currentConversation.userProfile.userID\r\n\r\n      } else if (this.currentConversation.type === 'GROUP') {\r\n        return this.currentConversation.groupProfile.name || this.toAccount\r\n      } else if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\r\n        return '系统通知'\r\n      }\r\n      return this.toAccount\r\n    },\r\n    showMessageSendBox() {\r\n      return this.currentConversation.type !== this.TIM.TYPES.CONV_SYSTEM\r\n    },\r\n    mergerTitle() {\r\n      if (this.mergerMessage) {\r\n        return this.mergerMessage.payload.title || '聊天记录'\r\n      } else {\r\n        return  '聊天记录'\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (this.$refs.dropdown && this.$refs.dropdown.$el) {\r\n      this.$refs.dropdown.$el.addEventListener('mousedown', this.move)\r\n    }\r\n    this.$bus.$on('image-loaded', this.onImageLoaded)\r\n    this.$bus.$on('scroll-bottom', this.scrollMessageListToButtom)\r\n    this.$bus.$on('mergerSelected', this.mergerSelectedHandler)\r\n    this.$bus.$on('mergerMessageShow', this.mergerShow)\r\n\r\n\r\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\r\n      return false\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.$refs.dropdown && this.$refs.dropdown.$el) {\r\n      this.$refs.dropdown.$el.removeEventListener('mousedown', this.move)\r\n    }\r\n  },\r\n  updated() {\r\n    this.keepMessageListOnButtom()\r\n    // 1. 系统会话隐藏右侧资料组件\r\n    // 2. 没有当前会话时，隐藏右侧资料组件。\r\n    //    背景：退出群组/删除会话时，会出现一处空白区域\r\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM' ||\r\n        typeof this.currentConversation.conversationID === 'undefined') {\r\n      this.showConversationProfile = false\r\n    }\r\n  },\r\n  watch: {\r\n    currentUnreadCount(next) {\r\n      if (!this.hidden && next > 0) {\r\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\r\n      }\r\n    },\r\n    hidden(next) {\r\n      if (!next && this.currentUnreadCount > 0) {\r\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    move(e) {\r\n      let odiv = this.$refs.dropdown.$el.children[0]//e.target        //获取目标元素\r\n      //算出鼠标相对元素的位置\r\n      let disX = e.clientX - odiv.offsetLeft\r\n      let disY = e.clientY - odiv.offsetTop\r\n      document.onmousemove = (e)=>{       //鼠标按下并移动的事件\r\n        //用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\r\n        let left = e.clientX - disX\r\n        let top = e.clientY - disY\r\n\r\n        //绑定元素位置到positionX和positionY上面\r\n        this.positionX = top\r\n        this.positionY = left\r\n\r\n        //移动当前元素\r\n        odiv.style.left = left + 'px'\r\n        odiv.style.top = top + 'px'\r\n      }\r\n      document.onmouseup = () => {\r\n        document.onmousemove = null\r\n        document.onmouseup = null\r\n      }\r\n    },\r\n    mergerMessageBack() {\r\n      let index = this.mergerMessageList.length - 2\r\n      this.$store.commit('updateMergerMessage', this.mergerMessageList[index])\r\n      // this.mergerMessageList.pop()\r\n    },\r\n    closeMessagePop() {\r\n      this.mergerMessagePop = false\r\n      this.$store.commit('resetMergerMessage')\r\n    },\r\n    closeSelectMessage() {\r\n      this.$store.commit('resetSelectedMessage', false)\r\n    },\r\n    mergerSelectedHandler() {\r\n      this.selectedMessageList = []\r\n      this.checkList = []\r\n      this.$store.commit('setSelectedMessage', true)\r\n    },\r\n    mergerShow(value) {\r\n      this.mergerMessagePop = true\r\n      this.mergerMessage = value\r\n      this.$store.commit('setMergerMessage', value)\r\n    },\r\n    mergerRelay() {\r\n      this.selectedMessage()\r\n      this.$store.commit('setRelayType', 3)\r\n    },\r\n    singleRelay() {\r\n      this.selectedMessage()\r\n      this.$store.commit('setRelayType', 2)\r\n    },\r\n    selectedMessage () {\r\n      let messageList = []\r\n      this.selectedMessageList = []\r\n      this.checkList.forEach((id) => {\r\n        messageList = this.currentMessageList.find((item) => {\r\n          return item.ID === id\r\n        })\r\n        this.selectedMessageList.push(messageList)\r\n      })\r\n\r\n      this.$store.commit('showConversationList', true)\r\n      //this.closeSelectMessage() // TODO\r\n      this.$store.commit('setSelectedMessageList', this.selectedMessageList)\r\n    },\r\n    onScroll({ target: { scrollTop } }) {\r\n      let messageListNode = this.$refs['message-list']\r\n      if (!messageListNode) {\r\n        return\r\n      }\r\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\r\n        this.isShowScrollButtomTips = false\r\n      }\r\n    },\r\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\r\n    keepMessageListOnButtom() {\r\n      let messageListNode = this.$refs['message-list']\r\n      if (!messageListNode) {\r\n        return\r\n      }\r\n      // 距离底部20px内强制滚到底部,否则提示有新消息\r\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\r\n        this.$nextTick(() => {\r\n          messageListNode.scrollTop = messageListNode.scrollHeight\r\n        })\r\n        this.isShowScrollButtomTips = false\r\n      } else {\r\n        this.isShowScrollButtomTips = true\r\n      }\r\n      this.preScrollHeight = messageListNode.scrollHeight\r\n    },\r\n    // 直接滚到底部\r\n    scrollMessageListToButtom() {\r\n      this.$nextTick(() => {\r\n        let messageListNode = this.$refs['message-list']\r\n        if (!messageListNode) {\r\n          return\r\n        }\r\n        messageListNode.scrollTop = messageListNode.scrollHeight\r\n        this.preScrollHeight = messageListNode.scrollHeight\r\n        this.isShowScrollButtomTips = false\r\n      })\r\n    },\r\n    showMore() {\r\n      this.showConversationProfile = !this.showConversationProfile\r\n    },\r\n    onImageLoaded() {\r\n      this.keepMessageListOnButtom()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n/* 当前会话的骨架屏 */\r\n.current-conversation-wrapper\r\n  height $height\r\n  background-color $background-light\r\n  color $base\r\n  display flex\r\n  .current-conversation\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: $height;\r\n  .profile\r\n    height: $height;\r\n    overflow-y: scroll;\r\n    width 220px\r\n    border-left 1px solid $border-base\r\n    flex-shrink 0\r\n  .more\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n  .no-more\r\n    display: flex;\r\n    justify-content: center;\r\n    color: $secondary;\r\n    font-size: 12px;\r\n    padding: 10px 10px;\r\n\r\n.header\r\n  border-bottom 1px solid $border-base\r\n  height 50px\r\n  position relative\r\n  .name\r\n    padding 0 20px\r\n    color $base\r\n    font-size 18px\r\n    font-weight bold\r\n    line-height 50px\r\n    text-shadow $font-dark 0 0 0.1em\r\n  .btn-more-info\r\n    position absolute\r\n    top 10px\r\n    right -15px\r\n    border-radius 50%\r\n    width 30px\r\n    height 30px\r\n    cursor pointer\r\n    &::before\r\n      position absolute\r\n      right 0\r\n      z-index 0\r\n      content \"\"\r\n      width: 15px\r\n      height: 30px\r\n      border: 1px solid $border-base\r\n      border-radius: 0 100% 100% 0/50%\r\n      border-left: none\r\n      background-color $background-light\r\n    &::after\r\n      content \"\"\r\n      width: 8px;\r\n      height: 8px;\r\n      transition: transform 0.8s;\r\n      border-top: 2px solid $secondary;\r\n      border-right: 2px solid $secondary;\r\n      float:right;\r\n      position:relative;\r\n      top: 11px;\r\n      right: 8px;\r\n      transform:rotate(45deg)\r\n    &.left-arrow\r\n      transform rotate(180deg)\r\n      &::before\r\n        background-color $white\r\n    &:hover\r\n      &::after\r\n        border-color $light-primary\r\n.content\r\n  display: flex;\r\n  flex 1\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  .message-list\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n    padding: 0 20px;\r\n  .newMessageTips\r\n    position: absolute\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    width: 120px;\r\n    margin: auto;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 5px;\r\n    font-size: 12px;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n    border: $border-light 1px solid;\r\n    background-color: $white;\r\n    color: $primary;\r\n.footer\r\n  border-top: 1px solid $border-base;\r\n  .merger-btn {\r\n    height 150px\r\n    padding 3px 20px 20px 20px\r\n    box-sizing border-box\r\n    display flex\r\n    justify-content space-between\r\n    padding-top 50px\r\n    .relay-btn {\r\n      display flex\r\n      flex-direction column\r\n      justify-content center\r\n      align-items center\r\n      width 60px\r\n      height 50px\r\n      .relay-icon {\r\n        display block\r\n        border-radius 50%\r\n        width 30px\r\n        height 30px\r\n        background-color #ffffff\r\n        margin-bottom 5px\r\n      }\r\n      .relay-title {\r\n        display block\r\n        font-size 13px\r\n      }\r\n    }\r\n  }\r\n\r\n.show-more {\r\n  text-align: right;\r\n  padding: 10px 20px 0 0;\r\n}\r\n/deep/ .el-checkbox {\r\n  width 100%\r\n  font-weight 300\r\n  margin-right 0\r\n  white-space normal\r\n}\r\n/deep/ .el-checkbox__label {\r\n  width 100%\r\n  padding-right 20px\r\n  box-sizing border-box\r\n}\r\n\r\n/deep/ .el-popover {\r\n  cursor pointer\r\n  width 700px\r\n  position fixed\r\n  left 30vw\r\n  /*right 0*/\r\n  margin 0\r\n  background-color #F7F7F7\r\n  padding 0\r\n  top 15vh\r\n}\r\n/deep/ .el-checkbox__inner {\r\n  width 18px\r\n  height 18px\r\n  border-radius 50%\r\n}\r\n/deep/ .el-checkbox__inner::after {\r\n  height 8px\r\n  left 6px\r\n  top 2px\r\n}\r\n/deep/ .el-checkbox__label {\r\n  line-height normal\r\n  margin -10px 0\r\n  margin-left 10px\r\n}\r\n /deep/ .el-checkbox__input {\r\n   position absolute\r\n   top 30px\r\n   left -10px\r\n }\r\n  .pop-header {\r\n    /*display flex*/\r\n    position relative\r\n    /*justify-content space-between*/\r\n    margin-bottom 10px\r\n    border-bottom 1px solid #DEDEDE\r\n    background-color #F3F3F3\r\n    padding 8px 8px\r\n    & img {\r\n      display block\r\n      width 22px\r\n      height 22px\r\n      cursor pointer\r\n      position absolute\r\n      top 8px\r\n    }\r\n    .title {\r\n      display block\r\n      text-align center\r\n    }\r\n    .pop-close {\r\n      right 5px\r\n    }\r\n    .pop-back {\r\n      left  5px\r\n    }\r\n  }\r\n\r\n</style>\r\n"]}]}