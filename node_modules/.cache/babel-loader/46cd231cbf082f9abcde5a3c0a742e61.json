{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\views\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\views\\login\\login.vue","mtime":1649859878864},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Foot from '@/components/loginpage/footer';\nimport genTestUserSig from \"../../../public/debug/GenerateTestUserSig\";\nexport default {\n  components: {\n    Foot: Foot\n  },\n  data: function data() {\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('用户名不能为空'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          validator: validateUsername,\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      console.log(this.ruleForm);\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$http({\n            url: '/worker/login',\n            method: 'get',\n            crossdomain: true,\n            params: {\n              username: _this.ruleForm.username,\n              password: _this.ruleForm.password\n            }\n          }).then(function (res) {\n            console.log(res.data);\n\n            if (res.data.msg === '请求成功') {\n              alert('登录成功!');\n\n              _this.$store1.commit('setUsername', res.data.data.username);\n\n              _this.$store1.commit('setUserID', res.data.data.id);\n\n              _this.$store1.commit('setSchedule', res.data.data.schedule);\n\n              var temp = res.data.data;\n              temp.available = 1; // console.log(res.data.data)\n\n              console.log(temp);\n\n              _this.$http({\n                url: '/admin/updateWorker',\n                method: 'post',\n                crossdomain: true,\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(temp)\n              }).then(function (res) {\n                console.log(res);\n              }).catch(function (err) {\n                console.log(err.data);\n              });\n\n              if (res.data.data.role == 3) {\n                _this.$router.replace('/admin');\n              } else if (res.data.data.role == 2) {\n                _this.$router.replace('/helper');\n              } else if (res.data.data.role == 1) {\n                _this.$router.replace('/consultant');\n              }\n\n              console.log('dsa');\n\n              _this.login_tim();\n            } else {\n              alert('用户名密码错误');\n            }\n          }).catch(function (err) {\n            console.log('==', err.data);\n          });\n        } else {\n          console.log('登录失败，请输入正确的用户名和密码');\n          return false;\n        }\n      });\n    },\n    login_tim: function login_tim() {\n      var _this2 = this;\n\n      // this.loading = true\n      console.log('t1');\n      console.log(window.genTestUserSig(this.$store1.state.username).userSig);\n      console.log(this.$store1.state.username);\n      console.log(this.$store1.state.userid);\n      this.tim.login({\n        userID: this.$store1.state.username,\n        userSig: window.genTestUserSig(this.$store1.state.username).userSig\n      }).then(function () {\n        _this2.loading = false;\n        console.log('t1_inter');\n\n        _this2.$store.commit('toggleIsLogin', true);\n\n        _this2.$store.commit('startComputeCurrent');\n\n        _this2.$store.commit('showMessage', {\n          type: 'success',\n          message: '登录成功'\n        });\n\n        _this2.$store.commit({\n          type: 'GET_USER_INFO',\n          userID: _this2.$store.state.username,\n          userSig: window.genTestUserSig(_this2.$store1.state.username).userSig,\n          sdkAppID: window.genTestUserSig('').SDKAppID\n        });\n\n        _this2.$store.commit('showMessage', {\n          type: 'success',\n          message: '登录成功'\n        });\n      }).catch(function (error) {\n        _this2.loading = false;\n\n        _this2.$store.commit('showMessage', {\n          message: '登录失败：' + error.message,\n          type: 'error'\n        });\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACAC;AACA;AACA,KANA;;AAOA;AACA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;AACA,KANA;;AAOA;AACAC;AACAC,oBADA;AAEAC;AAFA,OADA;AAKAC;AACAF,mBACA;AAAAG;AAAAC;AAAA,SADA,CADA;AAIAH,mBACA;AAAAE;AAAAC;AAAA,SADA;AAJA;AALA;AAcA,GAjCA;AAkCAC;AACAC,cADA,sBACAC,QADA,EACA;AAAA;;AACAC;AACA;AACA;AACA;AACAC,gCADA;AAEAC,yBAFA;AAGAC,6BAHA;AAIAC;AACAZ,+CADA;AAEAC;AAFA;AAJA,aAQAY,IARA,CAQA;AACAL;;AACA,yCACA;AACAM;;AACA;;AACA;;AACA;;AACA;AACAC,iCANA,CAOA;;AACAP;;AACA;AACAC,0CADA;AAEAC,8BAFA;AAGAC,iCAHA;AAIAK;AAAA;AAAA,iBAJA;AAKAC;AALA,iBAMAJ,IANA,CAMA;AACAL;AACA,eARA,EAQAU,KARA,CAQA;AACAV;AACA,eAVA;;AAWA;AACA;AACA,eAFA,MAEA;AACA;AACA,eAFA,MAEA;AACA;AACA;;AACAA;;AACA;AACA,aA9BA,MA+BA;AACAM;AACA;AACA,WA5CA,EA4CAI,KA5CA,CA4CA;AACAV;AACA,WA9CA;AA+CA,SAhDA,MAgDA;AACAA;AACA;AACA;AACA,OArDA;AAsDA,KAzDA;AA0DAW,aA1DA,uBA0DA;AAAA;;AACA;AACAX;AACAA;AACAA;AACAA;AACA,eACAY,KADA,CACA;AACAC,2CADA;AAEAC;AAFA,OADA,EAKAT,IALA,CAKA;AACA;AACAL;;AACA;;AACA;;AACA;AAAAe;AAAAC;AAAA;;AACA;AACAD,+BADA;AAEAF,8CAFA;AAGAC,+EAHA;AAIAG;AAJA;;AAMA;AACAF,yBADA;AAEAC;AAFA;AAIA,OArBA,EAsBAN,KAtBA,CAsBA;AACA;;AACA;AACAM,0CADA;AAEAD;AAFA;AAIA,OA5BA;AA6BA,KA7FA;AA8FAG,aA9FA,qBA8FAnB,QA9FA,EA8FA;AACA;AACA;AAhGA;AAlCA","names":["components","Foot","data","callback","ruleForm","username","password","rules","validator","trigger","methods","submitForm","formName","console","url","method","crossdomain","params","then","alert","temp","headers","body","catch","login_tim","login","userID","userSig","type","message","sdkAppID","resetForm"],"sourceRoot":"src/views/login","sources":["login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"register\">\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" status-icon :rules=\"rules\" label-width=\"100px\" class=\"register-form\">\n        <div class=\"title-container\">\n          <p class=\"title\">登录</p>\n        </div>\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"ruleForm.username\" type=\"text\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"密 码\" prop=\"password\">\n          <el-input v-model=\"ruleForm.password\" type=\"password\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item class=\"button\">\n          <el-button style=\"margin-left: 30px;background-color: #6b705c\" type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n          <el-button style=\"margin-left: 80px;background-color: #b7b7a4\" @click=\"resetForm('ruleForm')\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"linked\">\n        <router-link to=\"/register\"> 还没有账号？注册一个</router-link>\n      </div>\n    </div>\n    <Foot />\n  </div>\n</template>\n\n<script>\nimport Foot from '@/components/loginpage/footer'\nimport  genTestUserSig  from '../../../public/debug/GenerateTestUserSig'\n\nexport default {\n  components: {\n    Foot\n  },\n  data() {\n    var validateUsername = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('用户名不能为空'))\n      } else {\n        callback()\n      }\n    }\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      ruleForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { validator: validateUsername, trigger: 'blur' }\n        ],\n        password: [\n          { validator: validatePass, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      console.log(this.ruleForm)\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$http({\n            url: '/worker/login',\n            method: 'get',\n            crossdomain: true,\n            params: {\n              username: this.ruleForm.username,\n              password: this.ruleForm.password\n            }\n          }).then(res => {\n            console.log(res.data)\n            if(res.data.msg==='请求成功')\n            {\n              alert('登录成功!')\n              this.$store1.commit('setUsername', res.data.data.username)\n              this.$store1.commit('setUserID', res.data.data.id)\n              this.$store1.commit('setSchedule', res.data.data.schedule)\n              var temp=res.data.data\n              temp.available=1\n              // console.log(res.data.data)\n              console.log(temp)\n              this.$http({\n                url: '/admin/updateWorker',\n                method: 'post',\n                crossdomain: true,\n                headers: {'Content-Type': 'application/json'},\n                body:JSON.stringify(temp)\n              }).then(res => {\n                console.log(res)\n              }).catch(err => {\n                console.log(err.data)\n              })\n              if(res.data.data.role==3) {\n                this.$router.replace('/admin')\n              }else if(res.data.data.role==2) {\n                this.$router.replace('/helper')\n              }else if(res.data.data.role==1) {\n                this.$router.replace('/consultant')\n              }\n            console.log('dsa')\n              this.login_tim()\n            }\n            else {\n              alert('用户名密码错误')\n            }\n          }).catch(err => {\n                console.log('==',err.data)\n              })\n        } else {\n          console.log('登录失败，请输入正确的用户名和密码')\n          return false\n        }\n      })\n    },\n    login_tim() {\n      // this.loading = true\n      console.log('t1')\n      console.log(window.genTestUserSig(this.$store1.state.username).userSig)\n      console.log(this.$store1.state.username)\n      console.log(this.$store1.state.userid)\n      this.tim\n          .login({\n            userID: this.$store1.state.username,\n            userSig: window.genTestUserSig(this.$store1.state.username).userSig\n          })\n          .then(() => {\n            this.loading = false\n            console.log('t1_inter')\n            this.$store.commit('toggleIsLogin', true)\n            this.$store.commit('startComputeCurrent')\n            this.$store.commit('showMessage', { type: 'success', message: '登录成功' })\n            this.$store.commit({\n              type: 'GET_USER_INFO',\n              userID: this.$store.state.username,\n              userSig: window.genTestUserSig(this.$store1.state.username).userSig,\n              sdkAppID: window.genTestUserSig('').SDKAppID\n            })\n            this.$store.commit('showMessage', {\n              type: 'success',\n              message: '登录成功'\n            })\n          })\n          .catch(error => {\n            this.loading = false\n            this.$store.commit('showMessage', {\n              message: '登录失败：' + error.message,\n              type: 'error'\n            })\n          })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container{\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"../../assets/images/bg-4.jpg\");\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  .register{\n    background-color: rgb(107, 112, 92,0.4);\n    width: 30%;\n    margin: 250px auto;\n    height: 40%;\n    .register-form{\n      margin-right: 40px;\n      margin-bottom: 40px;\n      .title-container {\n        //position: relative;\n        .title {\n          font-size: 26px;\n          color: #606266;\n          margin: 0px auto 20px auto;\n          padding-top: 20px;\n          text-align: center;\n        }\n      }\n    }\n    .linked{\n      //text-align: center;\n      position: relative;\n      top: 20px;\n      left: 45px;\n      height: 40px;\n      width: 100%;\n      margin: 0 auto;\n      color: white;\n    }\n  }\n}\n</style>\n"]}]}