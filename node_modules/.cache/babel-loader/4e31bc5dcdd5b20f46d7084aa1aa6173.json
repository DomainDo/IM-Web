{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\conversation\\conversationProfile\\group-member-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\conversation\\conversationProfile\\group-member-info.vue","mtime":1649851412185},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Popover2 from \"element-ui/lib/theme-chalk/popover.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popover from \"element-ui/lib/popover\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { getFullDate } from \"../../../utils/date\";\nexport default {\n  components: {\n    ElPopover: _Popover\n  },\n  props: ['member'],\n  data: function data() {\n    return {\n      muteTime: '',\n      popoverVisible: false,\n      nameCardPopoverVisible: false,\n      nameCard: this.member.nameCard\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    current: function current(state) {\n      return state.current;\n    }\n  })), {}, {\n    // 是否显示踢出群成员按钮\n    showKickout: function showKickout() {\n      return (this.isOwner || this.isAdmin) && !this.isMine;\n    },\n    isOwner: function isOwner() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner';\n    },\n    isAdmin: function isAdmin() {\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin';\n    },\n    isMine: function isMine() {\n      return this.currentUserProfile.userID === this.member.userID;\n    },\n    canChangeRole: function canChangeRole() {\n      return this.isOwner && ['ChatRoom', 'Public'].includes(this.currentConversation.subType);\n    },\n    changeRoleTitle: function changeRoleTitle() {\n      if (!this.canChangeRole) {\n        return '';\n      }\n\n      return this.isOwner && this.member.role === 'Admin' ? '设为：Member' : '设为：Admin';\n    },\n    // 是否显示禁言时间\n    showMuteUntil: function showMuteUntil() {\n      // 禁言时间小于当前时间\n      return this.member.muteUntil * 1000 > this.current;\n    },\n    // 是否显示取消禁言按钮\n    showCancelBan: function showCancelBan() {\n      if (this.showMuteUntil && this.currentConversation.type === this.TIM.TYPES.CONV_GROUP && !this.isMine) {\n        return this.isOwner || this.isAdmin;\n      }\n\n      return false;\n    },\n    // 是否显示禁言按钮\n    showBan: function showBan() {\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\n        return this.isOwner || this.isAdmin;\n      }\n\n      return false;\n    },\n    // 是否显示编辑群名片按钮\n    showEditNameCard: function showEditNameCard() {\n      return this.isOwner || this.isAdmin;\n    },\n    // 日期格式化后的禁言时间\n    muteUntil: function muteUntil() {\n      return getFullDate(new Date(this.member.muteUntil * 1000));\n    }\n  }),\n  methods: {\n    kickoutGroupMember: function kickoutGroupMember() {\n      var _this = this;\n\n      this.tim.deleteGroupMember({\n        groupID: this.currentConversation.groupProfile.groupID,\n        reason: '我要踢你出群',\n        userIDList: [this.member.userID]\n      }).then(function () {\n        _this.$store.commit('deleteGroupMemeber', _this.member.userID);\n      }).catch(function (error) {\n        _this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    changeMemberRole: function changeMemberRole() {\n      var _this2 = this;\n\n      if (!this.canChangeRole) {\n        return;\n      }\n\n      var currentRole = this.member.role;\n      this.tim.setGroupMemberRole({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        role: currentRole === 'Admin' ? 'Member' : 'Admin'\n      }).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    setGroupMemberMuteTime: function setGroupMemberMuteTime() {\n      var _this3 = this;\n\n      this.tim.setGroupMemberMuteTime({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        muteTime: Number(this.muteTime)\n      }).then(function () {\n        _this3.muteTime = '';\n        _this3.popoverVisible = false;\n      }).catch(function (error) {\n        _this3.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    // 取消禁言\n    cancelMute: function cancelMute() {\n      var _this4 = this;\n\n      this.tim.setGroupMemberMuteTime({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        muteTime: 0\n      }).then(function () {\n        _this4.muteTime = '';\n      }).catch(function (error) {\n        _this4.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    setGroupMemberNameCard: function setGroupMemberNameCard() {\n      var _this5 = this;\n\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.tim.setGroupMemberNameCard({\n        groupID: this.currentConversation.groupProfile.groupID,\n        userID: this.member.userID,\n        nameCard: this.nameCard\n      }).then(function () {\n        _this5.nameCardPopoverVisible = false;\n\n        _this5.$store.commit('showMessage', {\n          message: '修改成功'\n        });\n      }).catch(function (error) {\n        _this5.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AAEA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,mBAJA;AAKAC,MALA,kBAKA;AACA;AACAC,kBADA;AAEAC,2BAFA;AAGAC,mCAHA;AAIAC;AAJA;AAMA,GAZA;AAaAC,4CACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA,KAFA;AAGAC;AAAA;AAAA;AAHA,IADA;AAMA;AACAC,eAPA,yBAOA;AACA;AACA,KATA;AAUAC,WAVA,qBAUA;AACA;AACA,KAZA;AAaAC,WAbA,qBAaA;AACA;AACA,KAfA;AAgBAC,UAhBA,oBAgBA;AACA;AACA,KAlBA;AAmBAC,iBAnBA,2BAmBA;AACA,aACA,gBACA,iEAFA;AAIA,KAxBA;AAyBAC,mBAzBA,6BAyBA;AACA;AACA;AACA;;AACA,4DACA,WADA,GAEA,UAFA;AAGA,KAhCA;AAiCA;AACAC,iBAlCA,2BAkCA;AACA;AACA;AACA,KArCA;AAsCA;AACAC,iBAvCA,2BAuCA;AACA,UACA,sBACA,2DADA,IAEA,YAHA,EAIA;AACA;AACA;;AACA;AACA,KAhDA;AAiDA;AACAC,WAlDA,qBAkDA;AACA;AACA;AACA;;AACA;AACA,KAvDA;AAwDA;AACAC,oBAzDA,8BAyDA;AACA;AACA,KA3DA;AA4DA;AACAC,aA7DA,uBA6DA;AACA;AACA;AA/DA,IAbA;AA8EAC;AACAC,sBADA,gCACA;AAAA;;AACA,eACAC,iBADA,CACA;AACAC,8DADA;AAEAC,wBAFA;AAGAC;AAHA,OADA,EAMAC,IANA,CAMA;AACA;AACA,OARA,EASAC,KATA,CASA;AACA;AACAC,uBADA;AAEAC;AAFA;AAIA,OAdA;AAeA,KAjBA;AAkBAC,oBAlBA,8BAkBA;AAAA;;AACA;AACA;AACA;;AACA;AACA,eACAC,kBADA,CACA;AACAR,8DADA;AAEAS,kCAFA;AAGAC;AAHA,OADA,EAMAN,KANA,CAMA;AACA;AACAC,uBADA;AAEAC;AAFA;AAIA,OAXA;AAYA,KAnCA;AAoCAK,0BApCA,oCAoCA;AAAA;;AACA,eACAA,sBADA,CACA;AACAX,8DADA;AAEAS,kCAFA;AAGAhC;AAHA,OADA,EAMA0B,IANA,CAMA;AACA;AACA;AACA,OATA,EAUAC,KAVA,CAUA;AACA;AACAC,uBADA;AAEAC;AAFA;AAIA,OAfA;AAgBA,KArDA;AAsDA;AACAM,cAvDA,wBAuDA;AAAA;;AACA,eACAD,sBADA,CACA;AACAX,8DADA;AAEAS,kCAFA;AAGAhC;AAHA,OADA,EAMA0B,IANA,CAMA;AACA;AACA,OARA,EASAC,KATA,CASA;AACA;AACAC,uBADA;AAEAC;AAFA;AAIA,OAdA;AAeA,KAvEA;AAwEAO,0BAxEA,oCAwEA;AAAA;;AACA;AACA;AACAP,8BADA;AAEAD;AAFA;AAIA;AACA;;AACA,eACAQ,sBADA,CACA;AACAb,8DADA;AAEAS,kCAFA;AAGA7B;AAHA,OADA,EAMAuB,IANA,CAMA;AACA;;AACA;AACAG;AADA;AAGA,OAXA,EAYAF,KAZA,CAYA;AACA;AACAC,uBADA;AAEAC;AAFA;AAIA,OAjBA;AAkBA;AAlGA;AA9EA","names":["components","ElPopover","props","data","muteTime","popoverVisible","nameCardPopoverVisible","nameCard","computed","mapState","currentConversation","currentUserProfile","current","showKickout","isOwner","isAdmin","isMine","canChangeRole","changeRoleTitle","showMuteUntil","showCancelBan","showBan","showEditNameCard","muteUntil","methods","kickoutGroupMember","deleteGroupMember","groupID","reason","userIDList","then","catch","type","message","changeMemberRole","setGroupMemberRole","userID","role","setGroupMemberMuteTime","cancelMute","setGroupMemberNameCard"],"sourceRoot":"src/components/conversation/conversationProfile","sources":["group-member-info.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <span class=\"label\">userID:</span>\r\n      {{ member.userID }}\r\n      <el-button v-if=\"showCancelBan\" type=\"text\" @click=\"cancelMute\">取消禁言</el-button>\r\n      <el-popover title=\"禁言\" v-model=\"popoverVisible\" v-show=\"showBan\">\r\n        <el-input\r\n          v-model=\"muteTime\"\r\n          placeholder=\"请输入禁言时间\"\r\n          @keydown.enter.native=\"setGroupMemberMuteTime\"\r\n        />\r\n        <el-button slot=\"reference\" type=\"text\" style=\"color:red;\">禁言</el-button>\r\n      </el-popover>\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">nick:</span>\r\n      {{ member.nick || '暂无' }}\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">nameCard:</span>\r\n      {{ member.nameCard || '暂无' }}\r\n      <el-popover title=\"修改群名片\" v-model=\"nameCardPopoverVisible\" v-show=\"showEditNameCard\">\r\n        <el-input\r\n          v-model=\"nameCard\"\r\n          placeholder=\"请输入群名片\"\r\n          @keydown.enter.native=\"setGroupMemberNameCard\"\r\n        />\r\n        <i\r\n          class=\"el-icon-edit\"\r\n          title=\"修改群名片\"\r\n          slot=\"reference\"\r\n          style=\"cursor:pointer; font-size:1.6rem;\"\r\n        ></i>\r\n      </el-popover>\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">role:</span>\r\n      <span class=\"content role\" :title=\"changeRoleTitle\">{{ member.role }}</span>\r\n    </div>\r\n    <div v-if=\"showMuteUntil\">\r\n      <span class=\"label\">禁言至:</span>\r\n      <span class=\"content\">{{ muteUntil }}</span>\r\n    </div>\r\n    <el-button type=\"text\" v-if=\"canChangeRole\" @click=\"changeMemberRole\">\r\n      {{\r\n      member.role === 'Admin' ? '取消管理员' : '设为管理员'\r\n      }}\r\n    </el-button>\r\n    <el-button type=\"text\" v-if=\"showKickout\" style=\"color:red;\" @click=\"kickoutGroupMember\">踢出群组</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { Popover } from 'element-ui'\r\nimport { getFullDate } from '../../../utils/date'\r\nexport default {\r\n  components: {\r\n    ElPopover: Popover\r\n  },\r\n  props: ['member'],\r\n  data() {\r\n    return {\r\n      muteTime: '',\r\n      popoverVisible: false,\r\n      nameCardPopoverVisible: false,\r\n      nameCard: this.member.nameCard\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUserProfile: state => state.user.currentUserProfile,\r\n      current: state => state.current\r\n    }),\r\n    // 是否显示踢出群成员按钮\r\n    showKickout() {\r\n      return (this.isOwner || this.isAdmin) && !this.isMine\r\n    },\r\n    isOwner() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\r\n    },\r\n    isAdmin() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\r\n    },\r\n    isMine() {\r\n      return this.currentUserProfile.userID === this.member.userID\r\n    },\r\n    canChangeRole() {\r\n      return (\r\n        this.isOwner &&\r\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\r\n      )\r\n    },\r\n    changeRoleTitle() {\r\n      if (!this.canChangeRole) {\r\n        return ''\r\n      }\r\n      return this.isOwner && this.member.role === 'Admin'\r\n        ? '设为：Member'\r\n        : '设为：Admin'\r\n    },\r\n    // 是否显示禁言时间\r\n    showMuteUntil() {\r\n      // 禁言时间小于当前时间\r\n      return this.member.muteUntil * 1000 > this.current\r\n    },\r\n    // 是否显示取消禁言按钮\r\n    showCancelBan() {\r\n      if (\r\n        this.showMuteUntil &&\r\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\r\n        !this.isMine\r\n      ) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示禁言按钮\r\n    showBan() {\r\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示编辑群名片按钮\r\n    showEditNameCard() {\r\n      return this.isOwner || this.isAdmin\r\n    },\r\n    // 日期格式化后的禁言时间\r\n    muteUntil() {\r\n      return getFullDate(new Date(this.member.muteUntil * 1000))\r\n    }\r\n  },\r\n  methods: {\r\n    kickoutGroupMember() {\r\n      this.tim\r\n        .deleteGroupMember({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          reason: '我要踢你出群',\r\n          userIDList: [this.member.userID]\r\n        })\r\n        .then(() => {\r\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    changeMemberRole() {\r\n      if (!this.canChangeRole) {\r\n        return\r\n      }\r\n      let currentRole = this.member.role\r\n      this.tim\r\n        .setGroupMemberRole({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberMuteTime() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: Number(this.muteTime)\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n          this.popoverVisible = false\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    // 取消禁言\r\n    cancelMute() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: 0\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberNameCard() {\r\n      if (this.nameCard.trim().length === 0) {\r\n        this.$store.commit('showMessage', {\r\n          message: '不能设置空的群名片',\r\n          type: 'warning'\r\n        })\r\n        return\r\n      }\r\n      this.tim\r\n        .setGroupMemberNameCard({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          nameCard: this.nameCard\r\n        })\r\n        .then(() => {\r\n          this.nameCardPopoverVisible = false\r\n          this.$store.commit('showMessage', {\r\n            message: '修改成功'\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.label {\r\n  color: rgb(204, 200, 200);\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}