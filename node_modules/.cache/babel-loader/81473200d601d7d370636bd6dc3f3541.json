{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\merger-message\\message-merger.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\merger-message\\message-merger.vue","mtime":1649851412191},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport MergerMessageItem from \"./mergerMessage-item\";\nimport { getFullDate } from \"../../../utils/date\";\nexport default {\n  name: 'CurrentConversation',\n  components: {\n    MergerMessageItem: MergerMessageItem\n  },\n  data: function data() {\n    return {\n      preScrollHeight: 0,\n      mergerMessageList: [],\n      showMessage: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    mergerMessage: function mergerMessage(state) {\n      return state.conversation.mergerMessage;\n    }\n  })), {}, {\n    mergerList: function mergerList() {\n      return function (message) {\n        return message.payload.messageList;\n      };\n    }\n  }),\n  created: function created() {},\n  mounted: function mounted() {},\n  updated: function updated() {},\n  watch: {},\n  methods: {\n    getDate: function getDate(time) {\n      return getFullDate(new Date(time * 1000));\n    },\n    onScroll: function onScroll(_ref) {\n      var scrollTop = _ref.target.scrollTop;\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      }\n\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\n        this.isShowScrollButtomTips = false;\n      }\n    },\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\n    keepMessageListOnButtom: function keepMessageListOnButtom() {\n      var messageListNode = this.$refs['message-list'];\n\n      if (!messageListNode) {\n        return;\n      } // 距离底部20px内强制滚到底部,否则提示有新消息\n\n\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\n        this.$nextTick(function () {\n          messageListNode.scrollTop = messageListNode.scrollHeight;\n        });\n        this.isShowScrollButtomTips = false;\n      } else {\n        this.isShowScrollButtomTips = true;\n      }\n\n      this.preScrollHeight = messageListNode.scrollHeight;\n    },\n    // 直接滚到底部\n    scrollMessageListToButtom: function scrollMessageListToButtom() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var messageListNode = _this.$refs['message-list'];\n\n        if (!messageListNode) {\n          return;\n        }\n\n        messageListNode.scrollTop = messageListNode.scrollHeight;\n        _this.preScrollHeight = messageListNode.scrollHeight;\n        _this.isShowScrollButtomTips = false;\n      });\n    },\n    onImageLoaded: function onImageLoaded() {\n      this.keepMessageListOnButtom();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACAA,6BADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,wBADA;AAEAC,2BAFA;AAGAC;AAHA;AAMA,GAZA;AAaAC,4CACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA;AAFA,IADA;AAKAC,cALA,wBAKA;AACA;AACA;AACA,OAFA;AAGA;AATA,IAbA;AAwBAC,SAxBA,qBAwBA,CACA,CAzBA;AA0BAC,SA1BA,qBA0BA,CAEA,CA5BA;AA6BAC,SA7BA,qBA6BA,CAEA,CA/BA;AAgCAC,WAhCA;AAmCAC;AACAC,WADA,mBACAC,IADA,EACA;AACA;AACA,KAHA;AAIAC,YAJA,0BAIA;AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KAZA;AAaA;AACAC,2BAdA,qCAcA;AACA;;AACA;AACA;AACA,OAJA,CAKA;;;AACA;AACA;AACAC;AACA,SAFA;AAGA;AACA,OALA,MAKA;AACA;AACA;;AACA;AACA,KA7BA;AA8BA;AACAC,6BA/BA,uCA+BA;AAAA;;AACA;AACA;;AACA;AACA;AACA;;AACAD;AACA;AACA;AACA,OARA;AASA,KAzCA;AA0CAE,iBA1CA,2BA0CA;AACA;AACA;AA5CA;AAnCA","names":["name","components","MergerMessageItem","data","preScrollHeight","mergerMessageList","showMessage","computed","mapState","currentConversation","mergerMessage","mergerList","created","mounted","updated","watch","methods","getDate","time","onScroll","keepMessageListOnButtom","messageListNode","scrollMessageListToButtom","onImageLoaded"],"sourceRoot":"src/components/message/merger-message","sources":["message-merger.vue"],"sourcesContent":["<template>\r\n    <div class=\"merger-conversation-wrapper\">\r\n        <div class=\"current-conversation\" @scroll=\"onScroll\">\r\n            <div class=\"content\">\r\n                <div class=\"message-list\" ref=\"message-list\" @scroll=\"this.onScroll\">\r\n                    <div   v-for=\"(messageItem, index) in mergerList(mergerMessage)\" :key=\"index\">\r\n                        <div class=\"message-item\">\r\n                            <div class=\"avatar-box\">\r\n                                <avatar class=\"group-member-avatar\" :src=\"messageItem.avatar\"/>\r\n                            </div>\r\n                            <div class=\"container-box\">\r\n                                <div class=\"nick-date\">\r\n                                    <div class=\"name text-ellipsis\">{{messageItem.nick || messageItem.from || '小晨曦'}}</div>\r\n                                    <div class=\"date\">{{ getDate(messageItem.time) }}</div>\r\n                                </div>\r\n                                <merger-message-item v-for=\"(item,index) in messageItem.messageBody\" :key=\"index\" :message=\"item\" :payload=\"item.payload\"/>\r\n                            </div>\r\n                        </div>\r\n                        <el-divider></el-divider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import {  mapState } from 'vuex'\r\n  import MergerMessageItem from './mergerMessage-item'\r\n  import { getFullDate } from '../../../utils/date'\r\n  export default {\r\n    name: 'CurrentConversation',\r\n    components: {\r\n      MergerMessageItem,\r\n    },\r\n    data() {\r\n      return {\r\n        preScrollHeight: 0,\r\n        mergerMessageList: [],\r\n        showMessage: null,\r\n\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        currentConversation: state => state.conversation.currentConversation,\r\n        mergerMessage: state => state.conversation.mergerMessage\r\n      }),\r\n      mergerList() {\r\n        return function(message) {\r\n          return message.payload.messageList\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    updated() {\r\n\r\n    },\r\n    watch: {\r\n\r\n    },\r\n    methods: {\r\n      getDate(time) {\r\n        return getFullDate(new Date(time * 1000))\r\n      },\r\n      onScroll({ target: { scrollTop } }) {\r\n        let messageListNode = this.$refs['message-list']\r\n        if (!messageListNode) {\r\n          return\r\n        }\r\n        if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\r\n          this.isShowScrollButtomTips = false\r\n        }\r\n      },\r\n      // 如果滚到底部就保持在底部，否则提示是否要滚到底部\r\n      keepMessageListOnButtom() {\r\n        let messageListNode = this.$refs['message-list']\r\n        if (!messageListNode) {\r\n          return\r\n        }\r\n        // 距离底部20px内强制滚到底部,否则提示有新消息\r\n        if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\r\n          this.$nextTick(() => {\r\n            messageListNode.scrollTop = messageListNode.scrollHeight\r\n          })\r\n          this.isShowScrollButtomTips = false\r\n        } else {\r\n          this.isShowScrollButtomTips = true\r\n        }\r\n        this.preScrollHeight = messageListNode.scrollHeight\r\n      },\r\n      // 直接滚到底部\r\n      scrollMessageListToButtom() {\r\n        this.$nextTick(() => {\r\n          let messageListNode = this.$refs['message-list']\r\n          if (!messageListNode) {\r\n            return\r\n          }\r\n          messageListNode.scrollTop = messageListNode.scrollHeight\r\n          this.preScrollHeight = messageListNode.scrollHeight\r\n          this.isShowScrollButtomTips = false\r\n        })\r\n      },\r\n      onImageLoaded() {\r\n        this.keepMessageListOnButtom()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n    /* 当前会话的骨架屏 */\r\n    .merger-conversation-wrapper\r\n        height 54vh\r\n        /*background-color #ffffff*/\r\n        color $base\r\n        display flex\r\n        .current-conversation\r\n            display: flex;\r\n            flex-direction: column;\r\n            width: 100%;\r\n            height: 100%;\r\n    .content\r\n        display: flex;\r\n        flex 1\r\n        flex-direction: column;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        position: relative;\r\n        .message-list\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            overflow-y: scroll;\r\n            padding: 0 20px;\r\n\r\n    .footer\r\n        border-top: 1px solid $border-base;\r\n    .show-more {\r\n        text-align: right;\r\n        padding: 10px 20px 0 0;\r\n    }\r\n    /deep/ .el-checkbox {\r\n        width 100%\r\n    }\r\n    /deep/ .el-checkbox__label {\r\n        width 100%\r\n        padding-right 20px\r\n        box-sizing border-box\r\n    }\r\n    /deep/ .el-divider--horizontal {\r\n        display: block;\r\n        height: 1px;\r\n        width: 90%;\r\n        margin: 0 auto 8px;\r\n    }\r\n    .message-item {\r\n        display flex\r\n        /*border-bottom 1px solid #DEDEDE*/\r\n        /*padding-bottom  10px*/\r\n    }\r\n    .avatar-box {\r\n        .avatar {\r\n            width: 36px;\r\n            height: 36px;\r\n            border-radius: 50%;\r\n            box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n        }\r\n    }\r\n    .container-box {\r\n        display flex\r\n        flex-direction column\r\n        .nick-date {\r\n            font-size 12px\r\n            color #B3B3B3\r\n            display flex\r\n            flex-direction row\r\n            .name {\r\n                margin 0 5px\r\n            }\r\n        }\r\n\r\n    }\r\n</style>\r\n"]}]}