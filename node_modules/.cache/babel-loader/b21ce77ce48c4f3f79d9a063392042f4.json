{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\merger-message\\mergerMessage-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\merger-message\\mergerMessage-item.vue","mtime":1649851412191},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Rate2 from \"element-ui/lib/theme-chalk/rate.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Rate from \"element-ui/lib/rate\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { decodeText } from \"../../../utils/decodeText\";\nimport { getFullDate } from \"../../../utils/date\";\nexport default {\n  name: 'MessageItem',\n  props: {\n    message: {\n      type: Object,\n      required: true\n    },\n    payload: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    ElRate: _Rate\n  },\n  data: function data() {\n    return {\n      renderDom: [],\n      showConversationList: false,\n      relayMessage: {},\n      selectedConversation: [],\n      messageSelected: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    isShowConversationList: function isShowConversationList(state) {\n      return state.conversation.isShowConversationList;\n    }\n  })), {}, {\n    // 自定义消息\n    rate: function rate() {\n      return parseInt(this.payload.description);\n    },\n    // 图片消息\n    imageUrl: function imageUrl() {\n      var url = this.payload.imageInfoArray[0].imageUrl;\n\n      if (typeof url !== 'string') {\n        return '';\n      }\n\n      return url.slice(0, 2) === '//' ? \"https:\".concat(url) : url;\n    },\n    // showProgressBar() {\n    //   return this.$parent.message.status === 'unSend'\n    // },\n    percentage: function percentage() {\n      return Math.floor((this.$parent.message.progress || 0) * 100);\n    },\n    // 表情消息\n    faceUrl: function faceUrl() {\n      var name = '';\n\n      if (this.payload.data.indexOf('@2x') > 0) {\n        name = this.payload.data;\n      } else {\n        name = this.payload.data + '@2x';\n      }\n\n      return \"https://web.sdk.qcloud.com/im/assets/face-elem/\".concat(name, \".png\");\n    },\n    // 时间换算\n    date: function date() {\n      return getFullDate(new Date(this.message.time * 1000));\n    },\n    // 文件消息大小\n    fileSize: function fileSize() {\n      var size = this.payload.fileSize;\n\n      if (size > 1024) {\n        if (size / 1024 > 1024) {\n          return \"\".concat(this.toFixed(size / 1024 / 1024), \" Mb\");\n        }\n\n        return \"\".concat(this.toFixed(size / 1024), \" Kb\");\n      }\n\n      return \"\".concat(this.toFixed(size), \"B\");\n    },\n    // 消息昵称\n    from: function from() {\n      var isC2C = this.currentConversation.type === this.TIM.TYPES.CONV_C2C; // 自己发送的用昵称渲染\n\n      if (this.isMine) {\n        return this.currentUserProfile.nick || this.currentUserProfile.userID;\n      } // 1. C2C 的消息体中还无 nick / avatar 字段，需从 conversation.userProfile 中获取\n\n\n      if (isC2C) {\n        return this.currentConversation.userProfile.nick || this.currentConversation.userProfile.userID;\n      } // 2. 群组消息，用消息体中的 nick 渲染。nameCard暂时支持不完善\n\n\n      return this.message.nameCard || this.message.nick || this.message.from;\n    },\n    avatar: function avatar() {\n      if (this.currentConversation.type === 'C2C') {\n        return this.isMine ? this.currentUserProfile.avatar : this.currentConversation.userProfile.avatar;\n      } else if (this.currentConversation.type === 'GROUP') {\n        return this.isMine ? this.currentUserProfile.avatar : this.message.avatar;\n      } else {\n        return '';\n      }\n    },\n    currentConversationType: function currentConversationType() {\n      return this.currentConversation.type;\n    },\n    isMine: function isMine() {\n      return this.message.flow === 'out';\n    },\n    contentList: function contentList() {\n      return decodeText(this.payload);\n    }\n  }),\n  methods: {\n    // 自定义消息解析\n    translateCustomMessage: function translateCustomMessage(payload) {\n      var videoPayload = {};\n\n      try {\n        videoPayload = JSON.parse(payload.data);\n      } catch (e) {\n        videoPayload = {};\n      }\n\n      if (payload.data === 'group_create') {\n        return \"\".concat(payload.extension);\n      }\n\n      if (videoPayload.roomId) {\n        videoPayload.roomId = videoPayload.roomId.toString();\n        videoPayload.isFromGroupLive = 1;\n        return videoPayload;\n      }\n\n      if (payload.text) {\n        return payload.text;\n      } else {\n        return '[自定义消息]';\n      }\n    },\n    // 图片消息\n    onImageLoaded: function onImageLoaded(event) {\n      this.$bus.$emit('image-loaded', event);\n    },\n    handlePreview: function handlePreview() {\n      this.$bus.$emit('image-preview', {\n        url: this.payload.imageInfoArray[0].url,\n        flag: true\n      });\n    },\n    toFixed: function toFixed(number) {\n      var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      return number.toFixed(precision);\n    },\n    showGroupMemberProfile: function showGroupMemberProfile(event) {\n      var _this = this;\n\n      this.tim.getGroupMemberProfile({\n        groupID: this.message.to,\n        userIDList: [this.message.from]\n      }).then(function (_ref) {\n        var memberList = _ref.data.memberList;\n\n        if (memberList[0]) {\n          _this.$bus.$emit('showMemberProfile', {\n            event: event,\n            member: memberList[0]\n          });\n        }\n      });\n    },\n    messageClick: function messageClick(message) {\n      this.$store.commit('showConversationList', false);\n      this.showConversationList = true;\n      this.relayMessage = message; // 需要深拷贝吗？\n    },\n    showMergerMessage: function showMergerMessage() {\n      this.$bus.$emit('mergerMessage', true);\n    },\n    cancel: function cancel() {\n      this.showConversationList = false;\n    },\n    getList: function getList(value) {\n      this.selectedConversation = value;\n    },\n    messageRelay: function messageRelay() {\n      var _this2 = this;\n\n      var type = '';\n      var toUserId = '';\n      this.selectedConversation.forEach(function (item) {\n        if (item.indexOf(_this2.TIM.TYPES.CONV_C2C) !== -1) {\n          type = _this2.TIM.TYPES.CONV_C2C;\n          toUserId = item.substring(3, item.length);\n        }\n\n        if (item.indexOf(_this2.TIM.TYPES.CONV_GROUP) !== -1) {\n          type = _this2.TIM.TYPES.CONV_GROUP;\n          toUserId = item.substring(5, item.length);\n        }\n\n        var message = _this2.tim.createForwardMessage({\n          to: toUserId,\n          conversationType: type,\n          payload: _this2.relayMessage,\n          priority: _this2.TIM.TYPES.MSG_PRIORITY_NORMAL\n        });\n\n        _this2.tim.sendMessage(message).catch(function (imError) {\n          _this2.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          });\n        });\n\n        _this2.showConversationList = false;\n      });\n    },\n    // 合并的消息\n    mergerHandler: function mergerHandler(message) {\n      this.$store.commit('setMergerMessage', message); // this.$bus.$emit('mergerMessage', message)\n    },\n    // 视频消息\n    videoError: function videoError(e) {\n      this.$store.commit('showMessage', {\n        type: 'error',\n        message: '视频出错，错误原因：' + e.target.error.message\n      });\n    },\n    // 音频消息\n    play: function play() {\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\n      var audio = document.createElement('audio');\n      audio.addEventListener('error', this.tryPlayAMR); // 播放出错，则尝试使用 AMR 播放\n\n      audio.src = this.payload.url;\n      var promise = audio.play();\n\n      if (promise) {\n        promise.catch(function () {});\n      }\n    },\n    tryPlayAMR: function tryPlayAMR() {\n      try {\n        var isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent); // amr 播放组件库在 IE 不支持\n\n        if (isIE) {\n          this.$store.commit('showMessage', {\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n            type: 'warning'\n          });\n          return;\n        } // 动态插入 amr 播放组件库\n\n\n        if (!window.BenzAMRRecorder) {\n          var script = document.createElement('script');\n          script.addEventListener('load', this.playAMR);\n          script.src = './BenzAMRRecorder.js';\n          var firstScript = document.getElementsByTagName('script')[0];\n          firstScript.parentNode.insertBefore(script, firstScript);\n          return;\n        }\n\n        this.playAMR();\n      } catch (error) {\n        this.$store.commit('showMessage', {\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n          type: 'warning'\n        });\n      }\n    },\n    playAMR: function playAMR() {\n      var _this3 = this;\n\n      if (!this.amr && window.BenzAMRRecorder) {\n        this.amr = new window.BenzAMRRecorder();\n      }\n\n      if (this.amr.isInit()) {\n        this.amr.play();\n        return;\n      }\n\n      this.amr.initWithUrl(this.url).then(function () {\n        _this3.amr.play();\n      });\n    },\n    // 文件消息\n    downloadFile: function downloadFile() {\n      var _this4 = this;\n\n      // 浏览器支持fetch则用blob下载，避免浏览器点击a标签，跳转到新页面预览的行为\n      if (window.fetch) {\n        fetch(this.payload.fileUrl).then(function (res) {\n          return res.blob();\n        }).then(function (blob) {\n          var a = document.createElement('a');\n          var url = window.URL.createObjectURL(blob);\n          a.href = url;\n          a.download = _this4.payload.fileName;\n          a.click();\n        });\n      } else {\n        var a = document.createElement('a');\n        a.href = this.payload.fileUrl;\n        a.target = '_blank';\n        a.download = this.filename;\n        a.click();\n      }\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AAGA;AACAA,qBADA;AAEAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC;AAFA;AALA,GAFA;AAaAE;AACAC;AADA,GAbA;AAgBAC,MAhBA,kBAgBA;AACA;AACAC,mBADA;AAEAC,iCAFA;AAGAC,sBAHA;AAIAC,8BAJA;AAKAC;AALA;AAOA,GAxBA;AAyBAC,4CACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA,KAFA;AAGAC;AAAA;AAAA;AAHA,IADA;AAOA;AACAC,QARA,kBAQA;AACA;AACA,KAVA;AAWA;AACAC,YAZA,sBAYA;AACA;;AACA;AACA;AACA;;AACA;AACA,KAlBA;AAmBA;AACA;AACA;AACAC,cAtBA,wBAsBA;AACA;AACA,KAxBA;AAyBA;AACAC,WA1BA,qBA0BA;AACA;;AACA;AACAtB;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA,KAlCA;AAmCA;AACAuB,QApCA,kBAoCA;AACA;AACA,KAtCA;AAwCA;AACAC,YAzCA,sBAyCA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,KAlDA;AAmDA;AACAC,QApDA,kBAoDA;AACA,4EADA,CAEA;;AACA;AACA;AACA,OALA,CAMA;;;AACA;AACA,eACA,6CACA,2CAFA;AAIA,OAZA,CAaA;;;AACA;AACA,KAnEA;AAoEAC,UApEA,oBAoEA;AACA;AACA,6BACA,8BADA,GAEA,2CAFA;AAGA,OAJA,MAIA;AACA,6BACA,8BADA,GAEA,mBAFA;AAGA,OAJA,MAIA;AACA;AACA;AACA,KAhFA;AAiFAC,2BAjFA,qCAiFA;AACA;AACA,KAnFA;AAoFAC,UApFA,oBAoFA;AACA;AACA,KAtFA;AAuFAC,eAvFA,yBAuFA;AACA;AACA;AAzFA,IAzBA;AAoHAC;AACA;AACAC,0BAFA,kCAEA1B,OAFA,EAEA;AACA;;AACA;AACA2B;AACA,OAFA,CAEA;AACAA;AACA;;AACA;AACA;AACA;;AACA;AACAA;AACAA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAtBA;AAuBA;AACAC,iBAxBA,yBAwBAC,KAxBA,EAwBA;AACA;AACA,KA1BA;AA2BAC,iBA3BA,2BA2BA;AACA;AACAC,+CADA;AAEAC;AAFA;AAIA,KAhCA;AAiCAC,WAjCA,mBAiCAC,MAjCA,EAiCA;AAAA;AACA;AACA,KAnCA;AAoCAC,0BApCA,kCAoCAN,KApCA,EAoCA;AAAA;;AACA,eACAO,qBADA,CACA;AACAC,gCADA;AAEAC;AAFA,OADA,EAKAC,IALA,CAKA;AAAA;;AACA;AACA;AAAAV;AAAAW;AAAA;AACA;AACA,OATA;AAUA,KA/CA;AAgDAC,gBAhDA,wBAgDA5C,OAhDA,EAgDA;AACA;AACA;AACA,kCAHA,CAGA;AACA,KApDA;AAqDA6C,qBArDA,+BAqDA;AACA;AACA,KAvDA;AAwDAC,UAxDA,oBAwDA;AACA;AACA,KA1DA;AA2DAC,WA3DA,mBA2DAC,KA3DA,EA2DA;AACA;AACA,KA7DA;AA8DAC,gBA9DA,0BA8DA;AAAA;;AACA;AACA;AACA;AACA;AACAhD;AACAiD;AACA;;AACA;AACAjD;AACAiD;AACA;;AACA;AACAC,sBADA;AAEAC,gCAFA;AAGAjD,sCAHA;AAIAkD;AAJA;;AAMA;AACA;AACArD,oCADA;AAEAC;AAFA;AAIA,SALA;;AAMA;AACA,OAtBA;AAuBA,KAxFA;AAyFA;AACAqD,iBA1FA,yBA0FAtD,OA1FA,EA0FA;AACA,sDADA,CAEA;AACA,KA7FA;AA8FA;AACAuD,cA/FA,sBA+FAC,CA/FA,EA+FA;AACA;AAAAvD;AAAAD;AAAA;AACA,KAjGA;AAkGA;AACAyD,QAnGA,kBAmGA;AACA;AACA;AACAC,uDAHA,CAGA;;AACAA;AACA;;AACA;AACAC;AACA;AACA,KA5GA;AA6GAC,cA7GA,wBA6GA;AACA;AACA,wEADA,CAEA;;AACA;AACA;AACA5D,6DADA;AAEAC;AAFA;AAIA;AACA,SATA,CAUA;;;AACA;AACA;AACA4D;AACAA;AACA;AACAC;AACA;AACA;;AACA;AACA,OApBA,CAoBA;AACA;AACA9D,2DADA;AAEAC;AAFA;AAIA;AACA,KAxIA;AAyIA8D,WAzIA,qBAyIA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,OAFA;AAGA,KApJA;AAqJA;AACAC,gBAtJA,0BAsJA;AAAA;;AACA;AACA;AACAC,oCACAvB,IADA,CACA;AAAA;AAAA,SADA,EAEAA,IAFA,CAEA;AACA;AACA;AACAwB;AACAA;AACAA;AACA,SARA;AASA,OAVA,MAUA;AACA;AACAA;AACAA;AACAA;AACAA;AACA;AACA;AAzKA;AApHA","names":["name","props","message","type","required","payload","components","ElRate","data","renderDom","showConversationList","relayMessage","selectedConversation","messageSelected","computed","mapState","currentConversation","currentUserProfile","isShowConversationList","rate","imageUrl","percentage","faceUrl","date","fileSize","from","avatar","currentConversationType","isMine","contentList","methods","translateCustomMessage","videoPayload","onImageLoaded","event","handlePreview","url","flag","toFixed","number","showGroupMemberProfile","getGroupMemberProfile","groupID","userIDList","then","member","messageClick","showMergerMessage","cancel","getList","value","messageRelay","toUserId","to","conversationType","priority","mergerHandler","videoError","e","play","audio","promise","tryPlayAMR","script","firstScript","playAMR","downloadFile","fetch","a"],"sourceRoot":"src/components/message/merger-message","sources":["mergerMessage-item.vue"],"sourcesContent":["<template>\r\n    <div class=\"message-wrapper col-2\">\r\n        <div class=\"content-wrapper\">\r\n<!--文本消息-->\r\n            <div class=\"message-container\" v-if=\"message.type === 'TIMTextElem'\">\r\n                <div class=\"text-message\" v-for=\"(item, index) in contentList\" :key=\"index\">\r\n                    <span  :key=\"index\" v-if=\"item.name === 'text'\">{{ item.text }}</span>\r\n                    <img v-else-if=\"item.name === 'img'\" :src=\"item.src\" width=\"20px\" height=\"20px\" :key=\"index\"/>\r\n                </div>\r\n            </div>\r\n<!--图片消息-->\r\n            <div class=\"message-container\" v-else-if=\"message.type === 'TIMImageElem'\">\r\n                <img class=\"image-element\" :src=\"payload.imageInfoArray[0].url\" @load=\"onImageLoaded\" @click=\"handlePreview()\" />\r\n            </div>\r\n<!--文件消息-->\r\n            <div class=\"message-container\" v-else-if=\"message.type === 'TIMFileElem'\">\r\n                <div class=\"file-element-wrapper\" title=\"单击下载\" @click=\"downloadFile\">\r\n                    <div class=\"file-box\">\r\n                        <i class=\"el-icon-document file-icon\"></i>\r\n                        <div class=\"file-element\">\r\n                            <span class=\"file-name\">{{ payload.fileName }}</span>\r\n                            <span class=\"file-size\">{{ fileSize }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n<!--表情消息-->\r\n\r\n            <div class=\"message-container\" v-else-if=\"message.type === 'TIMFaceElem'\">\r\n                <img :src=\"faceUrl\"/>\r\n            </div>\r\n<!--视频消息-->\r\n            <div class=\"message-container\" v-else-if=\"message.type === TIM.TYPES.MSG_VIDEO\">\r\n                <video\r\n                        :src=\"payload.videoUrl\"\r\n                        controls\r\n                        class=\"merger-video\"\r\n                        @error=\"videoError\"\r\n                ></video>\r\n            </div>\r\n<!--音频消息-->\r\n            <div class=\"sound-element-wrapper\"  v-else-if=\"message.type === TIM.TYPES.MSG_AUDIO\" title=\"单击播放\" @click=\"play\">\r\n                <i class=\"iconfont icon-voice\"></i>\r\n                {{ payload.second + '\"' }}\r\n            </div>\r\n <!--自定义消息-->\r\n            <div class=\"message-container\" v-else-if=\"message.type === 'TIMCustomElem'\">\r\n                <div class=\"custom-element-wrapper\">\r\n                    <div class=\"survey\"  v-if=\"this.payload.data === 'survey'\">\r\n                        <div class=\"title\">对IM DEMO的评分和建议</div>\r\n                        <el-rate\r\n                                v-model=\"rate\"\r\n                                disabled\r\n                                show-score\r\n                                text-color=\"#ff9900\"\r\n                                score-template=\"{value}\">\r\n                        </el-rate>\r\n                        <div class=\"suggestion\">{{this.payload.extension}}</div>\r\n                    </div>\r\n                    <span class=\"text\" title=\"您可以自行解析自定义消息\" v-else>\r\n                      <template >{{translateCustomMessage(this.payload)}}</template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n<!--合并的消息-->\r\n            <div class=\"message-container\"  @click=\"mergerHandler(message)\" v-else-if=\"message.type === TIM.TYPES.MSG_MERGER\">\r\n                <div class=\"merger-item\">\r\n                    <p class=\"merger-title\">{{payload.title}}</p>\r\n                    <p class=\"merger-text\" v-for=\"(item, index) in payload.abstractList\" :key=\"index\">\r\n                        {{item}}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex'\r\n  import { decodeText } from '../../../utils/decodeText'\r\n  import { getFullDate } from '../../../utils/date'\r\n  import { Rate } from 'element-ui'\r\n\r\n  export default {\r\n    name: 'MessageItem',\r\n    props: {\r\n      message: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n      payload: {\r\n        type: Object,\r\n        required: true\r\n      },\r\n\r\n    },\r\n    components: {\r\n      ElRate: Rate,\r\n    },\r\n    data() {\r\n      return {\r\n        renderDom: [],\r\n        showConversationList: false,\r\n        relayMessage: {},\r\n        selectedConversation: [],\r\n        messageSelected:[],\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        currentConversation: state => state.conversation.currentConversation,\r\n        currentUserProfile: state => state.user.currentUserProfile,\r\n        isShowConversationList: state => state.conversation.isShowConversationList,\r\n\r\n      }),\r\n      // 自定义消息\r\n      rate() {\r\n        return parseInt(this.payload.description)\r\n      },\r\n      // 图片消息\r\n      imageUrl() {\r\n        const url = this.payload.imageInfoArray[0].imageUrl\r\n        if (typeof url !== 'string') {\r\n          return ''\r\n        }\r\n        return url.slice(0, 2) === '//' ? `https:${url}` : url\r\n      },\r\n      // showProgressBar() {\r\n      //   return this.$parent.message.status === 'unSend'\r\n      // },\r\n      percentage() {\r\n        return Math.floor((this.$parent.message.progress || 0) * 100)\r\n      },\r\n      // 表情消息\r\n      faceUrl() {\r\n        let name = ''\r\n        if (this.payload.data.indexOf('@2x') > 0) {\r\n          name = this.payload.data\r\n        } else {\r\n          name = this.payload.data + '@2x'\r\n        }\r\n        return `https://web.sdk.qcloud.com/im/assets/face-elem/${name}.png`\r\n      },\r\n      // 时间换算\r\n      date() {\r\n        return getFullDate(new Date(this.message.time * 1000))\r\n      },\r\n\r\n      // 文件消息大小\r\n      fileSize() {\r\n        const size = this.payload.fileSize\r\n        if (size > 1024) {\r\n          if (size / 1024 > 1024) {\r\n            return `${this.toFixed(size / 1024 / 1024)} Mb`\r\n          }\r\n          return `${this.toFixed(size / 1024)} Kb`\r\n        }\r\n        return `${this.toFixed(size)}B`\r\n      },\r\n      // 消息昵称\r\n      from() {\r\n        const isC2C = this.currentConversation.type === this.TIM.TYPES.CONV_C2C\r\n        // 自己发送的用昵称渲染\r\n        if (this.isMine) {\r\n          return  this.currentUserProfile.nick || this.currentUserProfile.userID\r\n        }\r\n        // 1. C2C 的消息体中还无 nick / avatar 字段，需从 conversation.userProfile 中获取\r\n        if (isC2C) {\r\n          return (\r\n            this.currentConversation.userProfile.nick ||\r\n            this.currentConversation.userProfile.userID\r\n          )\r\n        }\r\n        // 2. 群组消息，用消息体中的 nick 渲染。nameCard暂时支持不完善\r\n        return this.message.nameCard ||  this.message.nick || this.message.from\r\n      },\r\n      avatar() {\r\n        if (this.currentConversation.type === 'C2C') {\r\n          return this.isMine\r\n            ? this.currentUserProfile.avatar\r\n            : this.currentConversation.userProfile.avatar\r\n        } else if (this.currentConversation.type === 'GROUP') {\r\n          return this.isMine\r\n            ? this.currentUserProfile.avatar\r\n            : this.message.avatar\r\n        } else {\r\n          return ''\r\n        }\r\n      },\r\n      currentConversationType() {\r\n        return this.currentConversation.type\r\n      },\r\n      isMine() {\r\n        return this.message.flow === 'out'\r\n      },\r\n      contentList() {\r\n        return decodeText(this.payload)\r\n      },\r\n    },\r\n    methods: {\r\n      // 自定义消息解析\r\n      translateCustomMessage(payload) {\r\n        let videoPayload = {}\r\n        try{\r\n          videoPayload = JSON.parse(payload.data)\r\n        } catch(e) {\r\n          videoPayload = {}\r\n        }\r\n        if (payload.data === 'group_create') {\r\n          return `${payload.extension}`\r\n        }\r\n        if (videoPayload.roomId) {\r\n          videoPayload.roomId = videoPayload.roomId.toString()\r\n          videoPayload.isFromGroupLive = 1\r\n          return videoPayload\r\n        }\r\n        if(payload.text) {\r\n          return payload.text\r\n        }else{\r\n          return '[自定义消息]'\r\n        }\r\n      },\r\n      // 图片消息\r\n      onImageLoaded(event) {\r\n        this.$bus.$emit('image-loaded', event)\r\n      },\r\n      handlePreview() {\r\n        this.$bus.$emit('image-preview', {\r\n          url: this.payload.imageInfoArray[0].url,\r\n          flag: true\r\n        })\r\n      },\r\n      toFixed(number, precision = 2) {\r\n        return number.toFixed(precision)\r\n      },\r\n      showGroupMemberProfile(event) {\r\n        this.tim\r\n          .getGroupMemberProfile({\r\n            groupID: this.message.to,\r\n            userIDList: [this.message.from]\r\n          })\r\n          .then(({ data: { memberList } }) => {\r\n            if (memberList[0]) {\r\n              this.$bus.$emit('showMemberProfile', { event, member: memberList[0] })\r\n            }\r\n          })\r\n      },\r\n      messageClick(message) {\r\n        this.$store.commit('showConversationList', false)\r\n        this.showConversationList = true\r\n        this.relayMessage = message   // 需要深拷贝吗？\r\n      },\r\n      showMergerMessage() {\r\n        this.$bus.$emit('mergerMessage', true)\r\n      },\r\n      cancel() {\r\n        this.showConversationList = false\r\n      },\r\n      getList(value) {\r\n        this.selectedConversation = value\r\n      },\r\n      messageRelay() {\r\n        let type = ''\r\n        let toUserId = ''\r\n        this.selectedConversation.forEach((item) => {\r\n          if(item.indexOf(this.TIM.TYPES.CONV_C2C) !== -1) {\r\n            type = this.TIM.TYPES.CONV_C2C\r\n            toUserId = item.substring(3,item.length)\r\n          }\r\n          if(item.indexOf(this.TIM.TYPES.CONV_GROUP) !== -1) {\r\n            type = this.TIM.TYPES.CONV_GROUP\r\n            toUserId = item.substring(5,item.length)\r\n          }\r\n          const message = this.tim.createForwardMessage({\r\n            to: toUserId,\r\n            conversationType: type,\r\n            payload: this.relayMessage,\r\n            priority: this.TIM.TYPES.MSG_PRIORITY_NORMAL\r\n          })\r\n          this.tim.sendMessage(message).catch(imError => {\r\n            this.$store.commit('showMessage', {\r\n              message: imError.message,\r\n              type: 'error'\r\n            })\r\n          })\r\n          this.showConversationList = false\r\n        })\r\n      },\r\n      // 合并的消息\r\n      mergerHandler(message) {\r\n        this.$store.commit('setMergerMessage', message)\r\n        // this.$bus.$emit('mergerMessage', message)\r\n      },\r\n      // 视频消息\r\n      videoError(e) {\r\n        this.$store.commit('showMessage', { type: 'error', message: '视频出错，错误原因：' + e.target.error.message })\r\n      },\r\n      // 音频消息\r\n      play() {\r\n        // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\r\n        const audio = document.createElement('audio')\r\n        audio.addEventListener('error', this.tryPlayAMR) // 播放出错，则尝试使用 AMR 播放\r\n        audio.src = this.payload.url\r\n        const promise = audio.play()\r\n        if (promise) {\r\n          promise.catch(() => {})\r\n        }\r\n      },\r\n      tryPlayAMR() {\r\n        try {\r\n          const isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent)\r\n          // amr 播放组件库在 IE 不支持\r\n          if (isIE) {\r\n            this.$store.commit('showMessage', {\r\n              message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n              type: 'warning'\r\n            })\r\n            return\r\n          }\r\n          // 动态插入 amr 播放组件库\r\n          if (!window.BenzAMRRecorder) {\r\n            const script = document.createElement('script')\r\n            script.addEventListener('load', this.playAMR)\r\n            script.src = './BenzAMRRecorder.js'\r\n            const firstScript = document.getElementsByTagName('script')[0]\r\n            firstScript.parentNode.insertBefore(script, firstScript)\r\n            return\r\n          }\r\n          this.playAMR()\r\n        } catch (error) {\r\n          this.$store.commit('showMessage', {\r\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n            type: 'warning'\r\n          })\r\n        }\r\n      },\r\n      playAMR() {\r\n        if (!this.amr && window.BenzAMRRecorder) {\r\n          this.amr = new window.BenzAMRRecorder()\r\n        }\r\n        if (this.amr.isInit()) {\r\n          this.amr.play()\r\n          return\r\n        }\r\n        this.amr.initWithUrl(this.url).then(() => {\r\n          this.amr.play()\r\n        })\r\n      },\r\n      // 文件消息\r\n      downloadFile() {\r\n        // 浏览器支持fetch则用blob下载，避免浏览器点击a标签，跳转到新页面预览的行为\r\n        if (window.fetch) {\r\n          fetch(this.payload.fileUrl)\r\n            .then(res => res.blob())\r\n            .then(blob => {\r\n              let a = document.createElement('a')\r\n              let url = window.URL.createObjectURL(blob)\r\n              a.href = url\r\n              a.download = this.payload.fileName\r\n              a.click()\r\n            })\r\n        } else {\r\n          let a = document.createElement('a')\r\n          a.href = this.payload.fileUrl\r\n          a.target = '_blank'\r\n          a.download = this.filename\r\n          a.click()\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n    .conversation-container {\r\n        position absolute\r\n        top 0\r\n        left 0px\r\n        width 100%\r\n        background-color #fff\r\n        z-index 999\r\n    }\r\n    .conversation-list-btn {\r\n        width 140px\r\n        display flex\r\n        float right\r\n        margin 10px 0\r\n        .conversation-btn {\r\n            cursor pointer\r\n            padding 6px 12px\r\n            background #00A4FF\r\n            color #ffffff\r\n            font-size 14px\r\n            border-radius 20px\r\n            margin-left 13px\r\n        }\r\n    }\r\n    .message-wrapper {\r\n        margin: 5px 5px 10px 5px;\r\n        .content-wrapper {\r\n            display: flex\r\n            align-items: center\r\n            .message-container {\r\n                width 100%\r\n                .text-message {\r\n                    padding 3px 10px\r\n                }\r\n                .image-element {\r\n                    max-height 300px\r\n                }\r\n                .merger-item {\r\n                    border 1px solid #DEDEDE\r\n                    background-color #ffffff\r\n                    padding 0 10px\r\n                    border-radius 6px\r\n                    .merger-title {\r\n                        font-size 15px\r\n                        max-width 180px\r\n                        overflow hidden;\r\n                        text-overflow ellipsis;\r\n                        white-space nowrap;\r\n                    }\r\n                    .merger-text {\r\n                        color #B3B3B3\r\n                        margin 10px 0\r\n                        font-size 13px\r\n                        max-width 280px\r\n                        overflow hidden;\r\n                        text-overflow ellipsis;\r\n                        white-space nowrap;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .group-layout, .c2c-layout, .system-layout {\r\n        display: flex;\r\n\r\n        .col-1 {\r\n            .avatar {\r\n                width: 56px;\r\n                height: 56px;\r\n                border-radius: 50%;\r\n                box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n            }\r\n        }\r\n\r\n        .group-member-avatar {\r\n            cursor: pointer;\r\n        }\r\n\r\n        .col-2 {\r\n            display: flex;\r\n            flex-direction: column;\r\n            // max-width 50% // 此设置可以自适应宽度，目前由bubble限制\r\n        }\r\n\r\n        .col-3 {\r\n            width: 30px;\r\n        }\r\n\r\n        &.position-left {\r\n            .col-2 {\r\n                align-items: flex-start;\r\n            }\r\n        }\r\n\r\n        &.position-right {\r\n            flex-direction: row-reverse;\r\n\r\n            .col-2 {\r\n                align-items: flex-end;\r\n            }\r\n        }\r\n\r\n        &.position-center {\r\n            justify-content: center;\r\n        }\r\n    }\r\n\r\n    .c2c-layout {\r\n        .col-2 {\r\n            .base {\r\n                margin-top: 3px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .group-layout {\r\n        .col-2 {\r\n            .chat-bubble {\r\n                margin-top: 5px;\r\n                outline none\r\n            }\r\n        }\r\n    }\r\n    .right {\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n    }\r\n\r\n    .left {\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n\r\n    .base {\r\n        color: $secondary;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .name {\r\n        padding: 0 4px;\r\n        max-width: 100px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n    .merger-video {\r\n        width 100%\r\n        max-height 300px\r\n    }\r\n    .file-box {\r\n        display: flex;\r\n    }\r\n    .file-icon {\r\n        font-size: 40px !important;\r\n    }\r\n    .file-element {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-left: 12px;\r\n    }\r\n    .file-size {\r\n        font-size: 12px;\r\n        padding-top 5px\r\n    }\r\n\r\n    .text\r\n    font-weight bold\r\n    .title\r\n        font-size 16px\r\n        font-weight 600\r\n        padding-bottom 10px\r\n    .survey\r\n        background-color white\r\n        color black\r\n        padding 20px\r\n        display flex\r\n        flex-direction column\r\n    .suggestion\r\n        padding-top 10px\r\n        font-size 14px\r\n    .sound-element-wrapper {\r\n        background-color #fff\r\n        padding 2px 13px\r\n        cursor pointer\r\n        border-radius 3px\r\n    }\r\n</style>\r\n"]}]}