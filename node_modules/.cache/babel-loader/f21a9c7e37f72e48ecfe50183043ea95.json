{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-elements\\sound-element.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-elements\\sound-element.vue","mtime":1649851412193},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MessageBubble from \"../message-bubble\";\nexport default {\n  name: 'SoundElement',\n  props: {\n    payload: {\n      type: Object,\n      required: true\n    },\n    message: {\n      type: Object,\n      required: true\n    },\n    isMine: {\n      type: Boolean\n    }\n  },\n  components: {\n    MessageBubble: MessageBubble\n  },\n  data: function data() {\n    return {\n      amr: null\n    };\n  },\n  computed: {\n    url: function url() {\n      return this.payload.url;\n    },\n    size: function size() {\n      return this.payload.size;\n    },\n    second: function second() {\n      return this.payload.second;\n    }\n  },\n  methods: {\n    play: function play() {\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\n      var audio = document.createElement('audio');\n      audio.addEventListener('error', this.tryPlayAMR); // 播放出错，则尝试使用 AMR 播放\n\n      audio.src = this.url;\n      var promise = audio.play();\n\n      if (promise) {\n        promise.catch(function () {});\n      }\n    },\n    tryPlayAMR: function tryPlayAMR() {\n      try {\n        var isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent); // amr 播放组件库在 IE 不支持\n\n        if (isIE) {\n          this.$store.commit('showMessage', {\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n            type: 'warning'\n          });\n          return;\n        } // 动态插入 amr 播放组件库\n\n\n        if (!window.BenzAMRRecorder) {\n          var script = document.createElement('script');\n          script.addEventListener('load', this.playAMR);\n          script.src = './BenzAMRRecorder.js';\n          var firstScript = document.getElementsByTagName('script')[0];\n          firstScript.parentNode.insertBefore(script, firstScript);\n          return;\n        }\n\n        this.playAMR();\n      } catch (error) {\n        this.$store.commit('showMessage', {\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\n          type: 'warning'\n        });\n      }\n    },\n    playAMR: function playAMR() {\n      var _this = this;\n\n      if (!this.amr && window.BenzAMRRecorder) {\n        this.amr = new window.BenzAMRRecorder();\n      }\n\n      if (this.amr.isInit()) {\n        this.amr.play();\n        return;\n      }\n\n      this.amr.initWithUrl(this.url).then(function () {\n        _this.amr.play();\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;AAUA;AACA;AACAA,sBADA;AAEAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC;AAFA,KALA;AASAE;AACAH;AADA;AATA,GAFA;AAeAI;AACAC;AADA,GAfA;AAkBAC,MAlBA,kBAkBA;AACA;AACAC;AADA;AAGA,GAtBA;AAuBAC;AACAC,OADA,iBACA;AACA;AACA,KAHA;AAIAC,QAJA,kBAIA;AACA;AACA,KANA;AAOAC,UAPA,oBAOA;AACA;AACA;AATA,GAvBA;AAkCAC;AACAC,QADA,kBACA;AACA;AACA;AACAC,uDAHA,CAGA;;AACAA;AACA;;AACA;AACAC;AACA;AACA,KAVA;AAWAC,cAXA,wBAWA;AACA;AACA,wEADA,CAEA;;AACA;AACA;AACAd,6DADA;AAEAF;AAFA;AAIA;AACA,SATA,CAUA;;;AACA;AACA;AACAiB;AACAA;AACA;AACAC;AACA;AACA;;AACA;AACA,OApBA,CAoBA;AACA;AACAhB,2DADA;AAEAF;AAFA;AAIA;AACA,KAtCA;AAuCAmB,WAvCA,qBAuCA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,OAFA;AAGA;AAlDA;AAlCA","names":["name","props","payload","type","required","message","isMine","components","MessageBubble","data","amr","computed","url","size","second","methods","play","audio","promise","tryPlayAMR","script","firstScript","playAMR"],"sourceRoot":"src/components/message/message-elements","sources":["sound-element.vue"],"sourcesContent":["<template>\r\n<message-bubble :isMine=isMine :message=message>\r\n  <div class=\"sound-element-wrapper\" title=\"单击播放\" @click=\"play\">\r\n    <i class=\"iconfont icon-voice\"></i>\r\n    {{ second + '\"' }}\r\n  </div>\r\n</message-bubble>\r\n</template>\r\n\r\n<script>\r\nimport MessageBubble from '../message-bubble'\r\nexport default {\r\n  name: 'SoundElement',\r\n  props: {\r\n    payload: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    message: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isMine: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  components: {\r\n    MessageBubble\r\n  },\r\n  data() {\r\n    return {\r\n      amr: null\r\n    }\r\n  },\r\n  computed: {\r\n    url() {\r\n      return this.payload.url\r\n    },\r\n    size() {\r\n      return this.payload.size\r\n    },\r\n    second() {\r\n      return this.payload.second\r\n    }\r\n  },\r\n  methods: {\r\n    play() {\r\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\r\n      const audio = document.createElement('audio')\r\n      audio.addEventListener('error', this.tryPlayAMR) // 播放出错，则尝试使用 AMR 播放\r\n      audio.src = this.url\r\n      const promise = audio.play()\r\n      if (promise) {\r\n        promise.catch(() => {})\r\n      }\r\n    },\r\n    tryPlayAMR() {\r\n      try {\r\n        const isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent)\r\n        // amr 播放组件库在 IE 不支持\r\n        if (isIE) {\r\n          this.$store.commit('showMessage', {\r\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n            type: 'warning'\r\n          })\r\n          return\r\n        }\r\n        // 动态插入 amr 播放组件库\r\n        if (!window.BenzAMRRecorder) {\r\n          const script = document.createElement('script')\r\n          script.addEventListener('load', this.playAMR)\r\n          script.src = './BenzAMRRecorder.js'\r\n          const firstScript = document.getElementsByTagName('script')[0]\r\n          firstScript.parentNode.insertBefore(script, firstScript)\r\n          return\r\n        }\r\n        this.playAMR()\r\n      } catch (error) {\r\n        this.$store.commit('showMessage', {\r\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n          type: 'warning'\r\n        })\r\n      }\r\n    },\r\n    playAMR() {\r\n      if (!this.amr && window.BenzAMRRecorder) {\r\n        this.amr = new window.BenzAMRRecorder()\r\n      }\r\n      if (this.amr.isInit()) {\r\n        this.amr.play()\r\n        return\r\n      }\r\n      this.amr.initWithUrl(this.url).then(() => {\r\n        this.amr.play()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.sound-element-wrapper {\r\n  padding: 0px 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}