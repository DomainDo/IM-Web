{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\trtc-calling\\group-member-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\trtc-calling\\group-member-list.vue","mtime":1649851412195},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  props: ['type'],\n  data: function data() {\n    return {\n      callingList: [],\n      addGroupMemberVisible: false,\n      currentMemberID: '',\n      count: 30 // 显示的群成员数量\n\n    };\n  },\n  components: {},\n  computed: _objectSpread(_objectSpread({}, mapState({\n    userID: function userID(state) {\n      return state.user.userID;\n    },\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentMemberList: function currentMemberList(state) {\n      return state.group.currentMemberList;\n    }\n  })), {}, {\n    showLoadMore: function showLoadMore() {\n      return this.members.length < this.currentConversation.groupProfile.memberCount;\n    },\n    members: function members() {\n      return this.currentMemberList.slice(0, this.count);\n    }\n  }),\n  methods: {\n    handleCheckedMembersChange: function handleCheckedMembersChange() {\n      this.$emit('getList', this.callingList);\n    },\n    getGroupMemberAvatarText: function getGroupMemberAvatarText(role) {\n      switch (role) {\n        case 'Owner':\n          return '群主';\n\n        case 'Admin':\n          return '管理员';\n\n        default:\n          return '群成员';\n      }\n    },\n    loadMore: function loadMore() {\n      var _this = this;\n\n      this.$store.dispatch('getGroupMemberList', this.groupProfile.groupID).then(function () {\n        _this.count += 30;\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,qBADA;AAEAC,kCAFA;AAGAC,yBAHA;AAIAC,eAJA,CAIA;;AAJA;AAMA,GATA;AAUAC,gBAVA;AAYAC,4CACAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA,KAFA;AAGAC;AAAA;AAAA;AAHA,IADA;AAMAC,gBANA,0BAMA;AACA;AACA,KARA;AASAC,WATA,qBASA;AACA;AACA;AAXA,IAZA;AAyBAC;AACAC,8BADA,wCACA;AACA;AACA,KAHA;AAIAC,4BAJA,oCAIAC,IAJA,EAIA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AANA;AAQA,KAbA;AAcAC,YAdA,sBAcA;AAAA;;AACA,kBACAC,QADA,CACA,oBADA,EACA,yBADA,EAEAC,IAFA,CAEA;AACA;AACA,OAJA;AAKA;AApBA;AAzBA","names":["props","data","callingList","addGroupMemberVisible","currentMemberID","count","components","computed","mapState","userID","currentConversation","currentMemberList","showLoadMore","members","methods","handleCheckedMembersChange","getGroupMemberAvatarText","role","loadMore","dispatch","then"],"sourceRoot":"src/components/message/trtc-calling","sources":["group-member-list.vue"],"sourcesContent":["<template>\r\n    <div class=\"group-member-list-wrapper\">\r\n        <div class=\"header\">\r\n            <span class=\"member-count text-ellipsis\">群成员：{{currentConversation.groupProfile.memberCount}}</span>\r\n        </div>\r\n        <div class=\"scroll-content\">\r\n            <div class=\"group-member-list\">\r\n                <el-checkbox-group v-model=\"callingList\" @change=\"handleCheckedMembersChange\">\r\n                    <el-checkbox v-if=\"type === 'groupAt'\"  :label=\"JSON.stringify({userID:this.TIM.TYPES.MSG_AT_ALL,nick:'所有人'})\" >\r\n                        <div class=\"group-member\">\r\n                            <avatar  :src=\"''\" />\r\n                            <div class=\"member-name text-ellipsis\">\r\n                                <span >所有人</span>\r\n                            </div>\r\n                        </div>\r\n                    </el-checkbox>\r\n                    <el-checkbox v-for=\"member in members\" :disabled=\"member.userID===userID\" :label=\"JSON.stringify({userID:member.userID,nick:member.nameCard || member.nick || member.userID})\" :key=\"member.userID\">\r\n                       <div class=\"group-member\">\r\n                           <avatar  :src=\"member.avatar\" />\r\n                           <div class=\"member-name text-ellipsis\">\r\n                               <span v-if=\"member.nameCard\" >{{ member.nameCard }}</span>\r\n                               <span v-else-if=\"member.nick\" >{{ member.nick }}</span>\r\n                               <span v-else >{{ member.userID }}</span>\r\n                           </div>\r\n                       </div>\r\n                    </el-checkbox>\r\n                </el-checkbox-group>\r\n            </div>\r\n        </div>\r\n        <div class=\"more\">\r\n            <el-button v-if=\"showLoadMore\" type=\"text\" @click=\"loadMore\">查看更多</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import { mapState } from 'vuex'\r\n  export default {\r\n    props:['type'],\r\n    data() {\r\n      return {\r\n        callingList:[],\r\n        addGroupMemberVisible: false,\r\n        currentMemberID: '',\r\n        count: 30 // 显示的群成员数量\r\n      }\r\n    },\r\n    components: {\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        userID: state => state.user.userID,\r\n        currentConversation: state => state.conversation.currentConversation,\r\n        currentMemberList: state => state.group.currentMemberList\r\n      }),\r\n      showLoadMore() {\r\n        return this.members.length < this.currentConversation.groupProfile.memberCount\r\n      },\r\n      members() {\r\n        return this.currentMemberList.slice(0, this.count)\r\n      }\r\n    },\r\n    methods: {\r\n      handleCheckedMembersChange() {\r\n        this.$emit('getList',this.callingList)\r\n      },\r\n      getGroupMemberAvatarText(role) {\r\n        switch (role) {\r\n          case 'Owner':\r\n            return '群主'\r\n          case 'Admin':\r\n            return '管理员'\r\n          default:\r\n            return '群成员'\r\n        }\r\n      },\r\n      loadMore() {\r\n        this.$store\r\n          .dispatch('getGroupMemberList', this.groupProfile.groupID)\r\n          .then(() => {\r\n            this.count += 30\r\n          })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n    .group-member-list-wrapper\r\n        .header\r\n            height 50px\r\n            padding 10px 16px 10px 20px\r\n            border-bottom 1px solid $border-base\r\n            .member-count\r\n                display inline-block\r\n                max-width 130px\r\n                line-height 30px\r\n                font-size 14px\r\n                vertical-align bottom\r\n            .btn-add-member\r\n                width 30px\r\n                height 30px\r\n                font-size 28px\r\n                text-align center\r\n                line-height 32px\r\n                cursor pointer\r\n                float right\r\n                &:hover\r\n                    color $light-primary\r\n        .scroll-content\r\n            max-height: 250px;\r\n            overflow-y: scroll;\r\n            padding 10px 15px 10px 15px\r\n            width 100%\r\n            .group-member-list\r\n                display flex\r\n                justify-content flex-start\r\n                flex-wrap wrap\r\n                width 100%\r\n            .group-member\r\n                width 100px\r\n                height 80px\r\n                display: flex;\r\n                justify-content center\r\n                align-content center\r\n                flex-direction: column;\r\n                text-align: center;\r\n                color: $black;\r\n                cursor: pointer;\r\n                .avatar\r\n                    width 40px\r\n                    height 40px\r\n                    border-radius 50%\r\n                    margin 0 auto\r\n                .member-name\r\n                    font-size 12px\r\n                    width: 100px;\r\n                    text-align center\r\n        .more\r\n            padding 0 20px\r\n            border-bottom 1px solid $border-base\r\n\r\n\r\n</style>\r\n"]}]}