{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-send-box.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-send-box.vue","mtime":1649851412194},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\babel.config.js","mtime":1649851550121},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:/project/softwareDevelopment/IM-Web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _Rate2 from \"element-ui/lib/theme-chalk/rate.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Rate from \"element-ui/lib/rate\";\nimport _Tooltip2 from \"element-ui/lib/theme-chalk/tooltip.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tooltip from \"element-ui/lib/tooltip\";\nimport _Popover2 from \"element-ui/lib/theme-chalk/popover.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popover from \"element-ui/lib/popover\";\nimport _Dialog2 from \"element-ui/lib/theme-chalk/dialog.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dialog from \"element-ui/lib/dialog\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState } from 'vuex';\nimport callingMemberList from \"./trtc-calling/group-member-list\";\nimport { emojiMap, emojiName, emojiUrl } from \"../../utils/emojiMap\";\nexport default {\n  name: 'message-send-box',\n  props: ['scrollMessageListToButtom'],\n  components: {\n    callingMemberList: callingMemberList,\n    ElInput: _Input,\n    ElForm: _Form,\n    ElFormItem: _FormItem,\n    ElDialog: _Dialog,\n    ElPopover: _Popover,\n    ElTooltip: _Tooltip,\n    ElRate: _Rate\n  },\n  data: function data() {\n    return {\n      callingList: [],\n      groupAtList: [],\n      listTpye: '',\n      callingType: '',\n      groupAt: false,\n      showCallingMember: false,\n      colors: ['#99A9BF', '#F7BA2A', '#FF9900'],\n      messageContent: '',\n      isSendCustomMessage: false,\n      sendCustomDialogVisible: false,\n      surveyDialogVisible: false,\n      form: {\n        data: '',\n        description: '',\n        extension: ''\n      },\n      rate: 5,\n      // 评分\n      suggestion: '',\n      // 建议\n      file: '',\n      emojiMap: emojiMap,\n      emojiName: emojiName,\n      emojiUrl: emojiUrl,\n      showAtGroupMember: false,\n      atUserID: '',\n      focus: false,\n      popoverVisible: false,\n      faceUrl: 'https://web.sdk.qcloud.com/im/assets/face-elem/',\n      emojiShow: true,\n      bigEmojiShow: false,\n      bigEmojiList: [{\n        icon: 'yz00',\n        list: ['yz00', 'yz01', 'yz02', 'yz03', 'yz04', 'yz05', 'yz06', 'yz07', 'yz08', 'yz09', 'yz10', 'yz11', 'yz12', 'yz13', 'yz14', 'yz15', 'yz16', 'yz17']\n      }, {\n        icon: 'ys00',\n        list: ['ys00', 'ys01', 'ys02', 'ys03', 'ys04', 'ys05', 'ys06', 'ys07', 'ys08', 'ys09', 'ys10', 'ys11', 'ys12', 'ys13', 'ys14', 'ys15']\n      }, {\n        icon: 'gcs00',\n        list: ['gcs00', 'gcs01', 'gcs02', 'gcs03', 'gcs04', 'gcs05', 'gcs06', 'gcs07', 'gcs08', 'gcs09', 'gcs10', 'gcs11', 'gcs12', 'gcs13', 'gcs14', 'gcs15', 'gcs16']\n      }],\n      curItemIndex: 0,\n      curBigEmojiItemList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['toAccount', 'currentConversationType'])), mapState({\n    memberList: function memberList(state) {\n      return state.group.currentMemberList;\n    },\n    userID: function userID(state) {\n      return state.user.userID;\n    },\n    groupProfile: function groupProfile(state) {\n      return state.conversation.currentConversation.groupProfile;\n    }\n  })),\n  mounted: function mounted() {\n    this.$refs['text-input'].addEventListener('paste', this.handlePaste);\n    this.$bus.$on('reEditMessage', this.reEditMessage);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$refs['text-input'].removeEventListener('paste', this.handlePaste);\n  },\n  methods: {\n    getList: function getList(value) {\n      this.callingList = value.map(function (item) {\n        var obj = JSON.parse(item);\n        return obj.userID;\n      });\n      this.groupAtList = value.map(function (item) {\n        var data = JSON.parse(item);\n        return data.nick;\n      });\n    },\n    cancelCalling: function cancelCalling() {\n      this.showCallingMember = false;\n    },\n    callingHandler: function callingHandler() {\n      var _this = this;\n\n      if (this.callingList.length < 1) {\n        this.$store.commit('showMessage', {\n          type: 'warning',\n          message: '请选择成员'\n        });\n        return;\n      }\n\n      if (this.listTpye === 'groupAt') {\n        this.groupAtList.forEach(function (item, index) {\n          if (index === 0) {\n            _this.messageContent += \"\".concat(item, \" \");\n          } else {\n            _this.messageContent += \"@\".concat(item, \" \");\n          }\n        });\n        this.showCallingMember = false;\n        this.$refs['text-input'].focus();\n        return;\n      }\n\n      if (this.listTpye === 'calling') {\n        var callingData = {\n          memberList: this.callingList,\n          type: this.TIM.TYPES.CONV_GROUP\n        };\n        this.$store.commit('setCallingList', callingData);\n\n        if (this.callingType === 'video') {\n          this.$bus.$emit('video-call');\n        }\n\n        if (this.callingType === 'audio') {\n          this.$bus.$emit('audio-call');\n        }\n\n        this.showCallingMember = false;\n      }\n    },\n    trtcCalling: function trtcCalling(type) {\n      this.listTpye = 'calling';\n\n      if (type === 'video') {\n        this.callingType = 'video';\n      }\n\n      if (type === 'audio') {\n        this.callingType = 'audio';\n      } // 呼叫方设置\n\n\n      if (this.currentConversationType === 'C2C') {\n        var member = [this.toAccount];\n        var callingData = {\n          memberList: member,\n          type: 'C2C'\n        };\n        this.$store.commit('setCallingList', callingData);\n        this.$bus.$emit(\"\".concat(type, \"-call\"));\n        return;\n      }\n\n      if (this.currentConversationType === this.TIM.TYPES.CONV_GROUP) {\n        this.showCallingMember = true;\n      } // this.$store.commit('pushCurrentMessageList', true)\n\n    },\n    handleEmojiShow: function handleEmojiShow() {\n      this.emojiShow = true;\n      this.bigEmojiShow = false;\n    },\n    handleBigEmojiShow: function handleBigEmojiShow(index) {\n      var elm = document.getElementById('bigEmojiBox');\n      elm && (elm.scrollTop = 0);\n      this.curItemIndex = index;\n      this.curBigEmojiItemList = this.bigEmojiList[index].list;\n      this.emojiShow = false;\n      this.bigEmojiShow = true;\n    },\n    chooseBigEmoji: function chooseBigEmoji(item) {\n      var _this2 = this;\n\n      this.popoverVisible = false;\n      var message = this.tim.createFaceMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          index: this.curItemIndex + 1,\n          data: \"\".concat(item, \"@2x\")\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.$bus.$emit('scroll-bottom');\n      this.tim.sendMessage(message).catch(function (error) {\n        _this2.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    reEditMessage: function reEditMessage(payload) {\n      this.messageContent = payload;\n    },\n    handleUp: function handleUp() {\n      var _this3 = this;\n\n      var index = this.memberList.findIndex(function (member) {\n        return member.userID === _this3.atUserID;\n      });\n\n      if (index - 1 < 0) {\n        return;\n      }\n\n      this.atUserID = this.memberList[index - 1].userID;\n    },\n    handleDown: function handleDown() {\n      var _this4 = this;\n\n      var index = this.memberList.findIndex(function (member) {\n        return member.userID === _this4.atUserID;\n      });\n\n      if (index + 1 >= this.memberList.length) {\n        return;\n      }\n\n      this.atUserID = this.memberList[index + 1].userID;\n    },\n    handleEnter: function handleEnter() {\n      this.sendTextMessage();\n    },\n    inputChange: function inputChange(value) {\n      if (this.currentConversationType === this.TIM.TYPES.CONV_GROUP && value.data === '@') {\n        this.groupAt = true;\n        this.listTpye = 'groupAt';\n        this.showCallingMember = true;\n      }\n\n      if (value.data === ' ' && this.messageContent.indexOf('@ ') !== -1) {\n        this.groupAt = false;\n        this.listTpye = '';\n        this.showCallingMember = false;\n      }\n    },\n    handleLine: function handleLine() {\n      this.messageContent += '\\n';\n    },\n    handlePaste: function handlePaste(e) {\n      var _this5 = this;\n\n      var clipboardData = e.clipboardData;\n      var file;\n\n      if (clipboardData && clipboardData.files && clipboardData.files.length > 0) {\n        file = clipboardData.files[0];\n      }\n\n      if (typeof file === 'undefined') {\n        return;\n      } // 1. 创建消息实例，接口返回的实例可以上屏\n\n\n      var message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: file\n        },\n        onProgress: function onProgress(percent) {\n          _this5.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message); // 2. 发送消息\n\n      var promise = this.tim.sendMessage(message);\n      promise.catch(function (error) {\n        _this5.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    dropHandler: function dropHandler(e) {\n      var _this6 = this;\n\n      e.preventDefault();\n      var file = e.dataTransfer.files[0];\n      var message = {};\n\n      if (file.type === 'video/mp4') {\n        message = this.tim.createVideoMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: function onProgress(percent) {\n            _this6.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n          }\n        });\n      } else {\n        message = this.tim.createFileMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: function onProgress(percent) {\n            _this6.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n          }\n        });\n      }\n\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this6.$refs.videoPicker.value = null;\n      }).catch(function (imError) {\n        _this6.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    },\n    sendTextMessage: function sendTextMessage() {\n      var _this7 = this;\n\n      if (this.messageContent === '' || this.messageContent.trim().length === 0) {\n        this.messageContent = '';\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息哦！',\n          type: 'info'\n        });\n        return;\n      }\n\n      if (this.currentConversationType === this.TIM.TYPES.CONV_GROUP && this.groupAt) {\n        var _message = this.tim.createTextAtMessage({\n          to: this.toAccount,\n          conversationType: this.TIM.TYPES.CONV_GROUP,\n          payload: {\n            text: this.messageContent,\n            atUserList: this.callingList // 'denny' 'lucy' 都是 userID，而非昵称\n\n          }\n        });\n\n        this.$store.commit('pushCurrentMessageList', _message);\n        this.$bus.$emit('scroll-bottom');\n        this.tim.sendMessage(_message).catch(function (error) {\n          _this7.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          });\n        });\n        this.messageContent = '';\n        this.groupAt = false;\n        return;\n      }\n\n      var message = this.tim.createTextMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          text: this.messageContent\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.$bus.$emit('scroll-bottom');\n      this.tim.sendMessage(message).catch(function (error) {\n        _this7.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n      this.messageContent = '';\n    },\n    sendCustomMessage: function sendCustomMessage() {\n      var _this8 = this;\n\n      if (this.form.data.length === 0 && this.form.description.length === 0 && this.form.extension.length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息',\n          type: 'info'\n        });\n        return;\n      }\n\n      var message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: this.form.data,\n          description: this.form.description,\n          extension: this.form.extension\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).catch(function (error) {\n        _this8.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      });\n      this.sendCustomDialogVisible = false;\n    },\n    random: function random(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    sendSurvey: function sendSurvey() {\n      var _this9 = this;\n\n      var message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: 'survey',\n          description: String(this.rate),\n          extension: this.suggestion\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      });\n      this.tim.sendMessage(message).then(function () {\n        Object.assign(_this9, {\n          rate: 5,\n          suggestion: ''\n        });\n      }).catch(function (error) {\n        _this9.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n      this.surveyDialogVisible = false;\n    },\n    chooseEmoji: function chooseEmoji(item) {\n      this.messageContent += item;\n    },\n    handleSendImageClick: function handleSendImageClick() {\n      this.$refs.imagePicker.click();\n    },\n    handleSendFileClick: function handleSendFileClick() {\n      this.$refs.filePicker.click();\n    },\n    handleSendVideoClick: function handleSendVideoClick() {\n      this.$refs.videoPicker.click();\n    },\n    groupLive: function groupLive() {\n      this.$store.commit('updateGroupLiveInfo', {\n        groupID: this.toAccount,\n        anchorID: this.userID\n      });\n      this.$bus.$emit('open-group-live', {\n        channel: 1\n      });\n    },\n    sendImage: function sendImage() {\n      var _this10 = this;\n\n      var message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('imagePicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this10.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this10.$refs.imagePicker.value = null;\n      }).catch(function (imError) {\n        _this10.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    },\n    sendFile: function sendFile() {\n      var _this11 = this;\n\n      var message = this.tim.createFileMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('filePicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this11.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this11.$refs.filePicker.value = null;\n      }).catch(function (imError) {\n        _this11.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    },\n    sendVideo: function sendVideo() {\n      var _this12 = this;\n\n      var message = this.tim.createVideoMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('videoPicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this12.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this12.$refs.videoPicker.value = null;\n      }).catch(function (imError) {\n        _this12.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AAUA;AAEA;AACAA,0BADA;AAEAC,sCAFA;AAGAC;AACAC,wCADA;AAEAC,mBAFA;AAGAC,iBAHA;AAIAC,yBAJA;AAKAC,qBALA;AAMAC,uBANA;AAOAC,uBAPA;AAQAC;AARA,GAHA;AAaAC,MAbA,kBAaA;AACA;AACAC,qBADA;AAEAC,qBAFA;AAGAC,kBAHA;AAIAC,qBAJA;AAKAC,oBALA;AAMAC,8BANA;AAOAC,+CAPA;AAQAC,wBARA;AASAC,gCATA;AAUAC,oCAVA;AAWAC,gCAXA;AAYAC;AACAZ,gBADA;AAEAa,uBAFA;AAGAC;AAHA,OAZA;AAiBAC,aAjBA;AAiBA;AACAC,oBAlBA;AAkBA;AACAC,cAnBA;AAoBAC,wBApBA;AAqBAC,0BArBA;AAsBAC,wBAtBA;AAuBAC,8BAvBA;AAwBAC,kBAxBA;AAyBAC,kBAzBA;AA0BAC,2BA1BA;AA2BAC,gEA3BA;AA4BAC,qBA5BA;AA6BAC,yBA7BA;AA8BAC,qBACA;AACAC,oBADA;AAEAC;AAFA,OADA,EAKA;AACAD,oBADA;AAEAC;AAFA,OALA,EASA;AACAD,qBADA;AAEAC;AAFA,OATA,CA9BA;AA4CAC,qBA5CA;AA6CAC;AA7CA;AA+CA,GA7DA;AA8DAC,4CACAC,oDADA,GAEAC;AACAC;AAAA;AAAA,KADA;AAEAC;AAAA;AAAA,KAFA;AAGAC;AAAA;AAAA;AAHA,IAFA,CA9DA;AAsEAC,SAtEA,qBAsEA;AACA;AACA;AACA,GAzEA;AA0EAC,eA1EA,2BA0EA;AACA;AACA,GA5EA;AA6EAC;AACAC,WADA,mBACAC,KADA,EACA;AACA;AACA;AACA;AACA,OAHA;AAIA;AACA;AACA;AACA,OAHA;AAIA,KAVA;AAWAC,iBAXA,2BAWA;AACA;AACA,KAbA;AAcAC,kBAdA,4BAcA;AAAA;;AACA;AACA;AACAC,yBADA;AAEAC;AAFA;AAIA;AACA;;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA,SANA;AAOA;AACA;AACA;AACA;;AACA;AACA;AACAX,sCADA;AAEAU;AAFA;AAIA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAEA,KAjDA;AAkDAE,eAlDA,uBAkDAF,IAlDA,EAkDA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,OAPA,CAQA;;;AACA;AACA;AACA;AACAV,4BADA;AAEAU;AAFA;AAIA;AACA;AACA;AACA;;AACA;AACA;AACA,OArBA,CAsBA;;AACA,KAzEA;AA0EAG,mBA1EA,6BA0EA;AACA;AACA;AACA,KA7EA;AA8EAC,sBA9EA,8BA8EAC,KA9EA,EA8EA;AACA;AACAC;AACA;AACA;AACA;AACA;AACA,KArFA;AAsFAC,kBAtFA,0BAsFAC,IAtFA,EAsFA;AAAA;;AACA;AACA;AACAC,0BADA;AAEAC,sDAFA;AAGAC;AACAN,sCADA;AAEAnD;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA8C,uBADA;AAEAC;AAFA;AAIA,OALA;AAMA,KAxGA;AAyGAW,iBAzGA,yBAyGAD,OAzGA,EAyGA;AACA;AACA,KA3GA;AA4GAE,YA5GA,sBA4GA;AAAA;;AACA,4CACA;AAAA;AAAA,OADA;;AAGA;AACA;AACA;;AACA;AACA,KApHA;AAqHAC,cArHA,wBAqHA;AAAA;;AACA,4CACA;AAAA;AAAA,OADA;;AAGA;AACA;AACA;;AACA;AACA,KA7HA;AA8HAC,eA9HA,yBA8HA;AACA;AACA,KAhIA;AAiIAC,eAjIA,uBAiIAnB,KAjIA,EAiIA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KA5IA;AA6IAoB,cA7IA,wBA6IA;AACA;AACA,KA/IA;AAgJAC,eAhJA,uBAgJAC,CAhJA,EAgJA;AAAA;;AACA;AACA;;AACA,UACAC,iBACAA,mBADA,IAEAA,8BAHA,EAIA;AACAjD;AACA;;AAEA;AACA;AACA,OAbA,CAcA;;;AACA;AACAsC,0BADA;AAEAC,sDA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","names":["name","props","components","callingMemberList","ElInput","ElForm","ElFormItem","ElDialog","ElPopover","ElTooltip","ElRate","data","callingList","groupAtList","listTpye","callingType","groupAt","showCallingMember","colors","messageContent","isSendCustomMessage","sendCustomDialogVisible","surveyDialogVisible","form","description","extension","rate","suggestion","file","emojiMap","emojiName","emojiUrl","showAtGroupMember","atUserID","focus","popoverVisible","faceUrl","emojiShow","bigEmojiShow","bigEmojiList","icon","list","curItemIndex","curBigEmojiItemList","computed","mapGetters","mapState","memberList","userID","groupProfile","mounted","beforeDestroy","methods","getList","value","cancelCalling","callingHandler","type","message","trtcCalling","handleEmojiShow","handleBigEmojiShow","index","elm","chooseBigEmoji","item","to","conversationType","payload","reEditMessage","handleUp","handleDown","handleEnter","inputChange","handleLine","handlePaste","e","clipboardData","onProgress","promise","dropHandler","sendMessage","then","catch","sendTextMessage","text","atUserList","sendCustomMessage","Object","random","min","max","sendSurvey","chooseEmoji","handleSendImageClick","handleSendFileClick","handleSendVideoClick","groupLive","groupID","anchorID","channel","sendImage","sendFile","sendVideo"],"sourceRoot":"src/components/message","sources":["message-send-box.vue"],"sourcesContent":["<template>\r\n  <div id=\"message-send-box-wrapper\" :style=\"focus ? {'backgroundColor': 'white'} : {}\" @drop=\"dropHandler\">\r\n    <div class=\"send-header-bar\">\r\n      <el-popover placement=\"top\" width=\"400\" trigger=\"click\">\r\n        <div class=\"emojis\">\r\n          <div v-for=\"item in emojiName\" class=\"emoji\" :key=\"item\" @click=\"chooseEmoji(item)\">\r\n            <img :src=\"emojiUrl + emojiMap[item]\" style=\"width:30px;height:30px\" />\r\n          </div>\r\n        </div>\r\n        <i class=\"iconfont icon-smile\" slot=\"reference\" title=\"发表情\"></i>\r\n      </el-popover>\r\n      <i class=\"iconfont icon-tupian\" title=\"发图片\" @click=\"handleSendImageClick\"></i>\r\n      <i class=\"el-icon-camera\" title=\"发视频\" @click=\"handleSendVideoClick\"></i>\r\n      <i class=\"iconfont icon-wenjian\" title=\"发文件\" @click=\"handleSendFileClick\"></i>\r\n      <i class=\"iconfont icon-zidingyi\" title=\"发自定义消息\" @click=\"sendCustomDialogVisible = true\"></i>\r\n      <i class=\"iconfont icon-diaocha\" title=\"小调查\" @click=\"surveyDialogVisible = true\"></i>\r\n      <el-dropdown>\r\n      <span class=\"el-dropdown-link\">\r\n      <i class=\"el-icon-phone-outline\" v-if=\"toAccount !== userID\" title=\"语音通话\"></i>\r\n      </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item  @click.native=\"trtcCalling('video')\">视频通话</el-dropdown-item>\r\n          <el-dropdown-item  @click.native=\"trtcCalling('audio')\">语音通话</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n      <div class=\"group-live-icon-box\" v-if=\"currentConversationType === TIM.TYPES.CONV_GROUP && groupProfile.type !== 'AVChatRoom'\" title=\"群直播\" @click=\"groupLive\">\r\n        <i class=\"group-live-icon\"></i>\r\n        <i class=\"group-live-icon-hover\"></i>\r\n      </div>\r\n    </div>\r\n    <el-dialog title=\"发自定义消息\" :visible.sync=\"sendCustomDialogVisible\" width=\"30%\">\r\n      <el-form label-width=\"100px\">\r\n        <el-form-item label=\"data\">\r\n          <el-input v-model=\"form.data\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"description\">\r\n          <el-input v-model=\"form.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"extension\">\r\n          <el-input v-model=\"form.extension\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"sendCustomDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"sendCustomMessage\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog title=\"对IM Web demo的建议和使用感受\" :visible.sync=\"surveyDialogVisible\" width=\"30%\">\r\n      <el-form label-width=\"100px\">\r\n        <el-form-item label=\"评分\">\r\n          <div class=\"block\">\r\n            <el-rate v-model=\"rate\" :colors=\"colors\" show-text></el-rate>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item label=\"建议\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入内容\"\r\n            resize=\"none\"\r\n            v-model=\"suggestion\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"surveyDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"sendSurvey\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <div class=\"bottom\">\r\n      <textarea\r\n        ref=\"text-input\"\r\n        rows=\"4\"\r\n        resize=\"false\"\r\n        v-model=\"messageContent\"\r\n        class=\"text-input\"\r\n        @focus=\"focus = true\"\r\n        @blur=\"focus = false\"\r\n        @input=\"inputChange\"\r\n        @keydown.enter.exact.prevent=\"handleEnter\"\r\n        @keyup.ctrl.enter.prevent.exact=\"handleLine\"\r\n        @keydown.up.stop=\"handleUp\"\r\n        @keydown.down.stop=\"handleDown\"\r\n      >\r\n      </textarea>\r\n      <el-tooltip\r\n        class=\"item\"\r\n        effect=\"dark\"\r\n        content=\"按Enter发送消息，Ctrl+Enter换行\"\r\n        placement=\"left-start\"\r\n      >\r\n        <div class=\"btn-send\" @click=\"sendTextMessage\">\r\n          <div class=\"tim-icon-send\"></div>\r\n        </div>\r\n      </el-tooltip>\r\n    </div>\r\n    <input\r\n      type=\"file\"\r\n      id=\"imagePicker\"\r\n      ref=\"imagePicker\"\r\n      accept=\".jpg, .jpeg, .png, .gif, .bmp\"\r\n      @change=\"sendImage\"\r\n      style=\"display:none\"\r\n    />\r\n    <input type=\"file\" id=\"filePicker\" ref=\"filePicker\" @change=\"sendFile\" style=\"display:none\" />\r\n    <input type=\"file\" id=\"videoPicker\" ref=\"videoPicker\" @change=\"sendVideo\" style=\"display:none\" accept=\".mp4\"/>\r\n    <div class=\"calling-member-list\" v-if=\"currentConversationType === TIM.TYPES.CONV_GROUP && showCallingMember\">\r\n      <calling-member-list @getList=\"getList\" :type=\"listTpye\"></calling-member-list>\r\n      <div class=\"calling-list-btn\">\r\n        <span class=\"calling-btn\" @click=\"cancelCalling\">取消</span>\r\n        <span class=\"calling-btn\" @click=\"callingHandler\">确定</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from 'vuex'\r\nimport callingMemberList from './trtc-calling/group-member-list'\r\nimport {\r\n  Form,\r\n  FormItem,\r\n  Input,\r\n  Dialog,\r\n  Popover,\r\n  Tooltip,\r\n  Rate\r\n} from 'element-ui'\r\nimport { emojiMap, emojiName, emojiUrl } from '../../utils/emojiMap'\r\n\r\nexport default {\r\n  name: 'message-send-box',\r\n  props: ['scrollMessageListToButtom'],\r\n  components: {\r\n    callingMemberList: callingMemberList,\r\n    ElInput: Input,\r\n    ElForm: Form,\r\n    ElFormItem: FormItem,\r\n    ElDialog: Dialog,\r\n    ElPopover: Popover,\r\n    ElTooltip: Tooltip,\r\n    ElRate: Rate\r\n  },\r\n  data() {\r\n    return {\r\n      callingList: [],\r\n      groupAtList: [],\r\n      listTpye:'',\r\n      callingType: '',\r\n      groupAt:false,\r\n      showCallingMember: false,\r\n      colors: ['#99A9BF', '#F7BA2A', '#FF9900'],\r\n      messageContent: '',\r\n      isSendCustomMessage: false,\r\n      sendCustomDialogVisible: false,\r\n      surveyDialogVisible: false,\r\n      form: {\r\n        data: '',\r\n        description: '',\r\n        extension: ''\r\n      },\r\n      rate: 5, // 评分\r\n      suggestion: '', // 建议\r\n      file: '',\r\n      emojiMap: emojiMap,\r\n      emojiName: emojiName,\r\n      emojiUrl: emojiUrl,\r\n      showAtGroupMember: false,\r\n      atUserID: '',\r\n      focus: false,\r\n      popoverVisible: false,\r\n      faceUrl: 'https://web.sdk.qcloud.com/im/assets/face-elem/',\r\n      emojiShow: true,\r\n      bigEmojiShow: false,\r\n      bigEmojiList: [\r\n        {\r\n          icon: 'yz00',\r\n          list: ['yz00', 'yz01', 'yz02', 'yz03', 'yz04', 'yz05', 'yz06', 'yz07', 'yz08', 'yz09', 'yz10', 'yz11', 'yz12', 'yz13', 'yz14', 'yz15', 'yz16', 'yz17']\r\n        },\r\n        {\r\n          icon: 'ys00',\r\n          list: ['ys00', 'ys01', 'ys02', 'ys03', 'ys04', 'ys05', 'ys06', 'ys07', 'ys08', 'ys09', 'ys10', 'ys11', 'ys12', 'ys13', 'ys14', 'ys15']\r\n        },\r\n        {\r\n          icon: 'gcs00',\r\n          list: ['gcs00', 'gcs01', 'gcs02', 'gcs03', 'gcs04', 'gcs05', 'gcs06', 'gcs07', 'gcs08', 'gcs09', 'gcs10', 'gcs11', 'gcs12', 'gcs13', 'gcs14', 'gcs15', 'gcs16']\r\n        }\r\n      ],\r\n      curItemIndex: 0,\r\n      curBigEmojiItemList: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['toAccount', 'currentConversationType']),\r\n    ...mapState({\r\n      memberList: state => state.group.currentMemberList,\r\n      userID: state => state.user.userID,\r\n      groupProfile: state => state.conversation.currentConversation.groupProfile\r\n    })\r\n  },\r\n  mounted() {\r\n    this.$refs['text-input'].addEventListener('paste', this.handlePaste)\r\n    this.$bus.$on('reEditMessage', this.reEditMessage)\r\n  },\r\n  beforeDestroy() {\r\n    this.$refs['text-input'].removeEventListener('paste', this.handlePaste)\r\n  },\r\n  methods: {\r\n    getList(value) {\r\n      this.callingList = value.map((item) => {\r\n        let obj = JSON.parse(item)\r\n        return obj.userID\r\n      })\r\n      this.groupAtList = value.map((item) => {\r\n        let data = JSON.parse(item)\r\n        return data.nick\r\n      })\r\n    },\r\n    cancelCalling() {\r\n      this.showCallingMember = false\r\n    },\r\n    callingHandler() {\r\n      if (this.callingList.length < 1) {\r\n        this.$store.commit('showMessage', {\r\n          type: 'warning',\r\n          message: '请选择成员'\r\n        })\r\n        return\r\n      }\r\n      if (this.listTpye === 'groupAt') {\r\n        this.groupAtList.forEach((item, index) => {\r\n          if(index===0) {\r\n            this.messageContent += `${item} `\r\n          }else{\r\n            this.messageContent += `@${item} `\r\n          }\r\n        })\r\n        this.showCallingMember = false\r\n        this.$refs['text-input'].focus()\r\n        return\r\n      }\r\n      if (this.listTpye === 'calling') {\r\n        let callingData = {\r\n          memberList:this.callingList,\r\n          type:this.TIM.TYPES.CONV_GROUP\r\n        }\r\n        this.$store.commit('setCallingList',callingData)\r\n        if (this.callingType === 'video') {\r\n          this.$bus.$emit('video-call')\r\n        }\r\n        if (this.callingType === 'audio') {\r\n          this.$bus.$emit('audio-call')\r\n        }\r\n        this.showCallingMember = false\r\n      }\r\n\r\n    },\r\n    trtcCalling(type) {\r\n      this.listTpye = 'calling'\r\n      if (type === 'video') {\r\n        this.callingType = 'video'\r\n      }\r\n      if (type === 'audio') {\r\n        this.callingType = 'audio'\r\n      }\r\n      // 呼叫方设置\r\n      if(this.currentConversationType === 'C2C') {\r\n        let member = [this.toAccount]\r\n        let callingData = {\r\n          memberList:member,\r\n          type:'C2C'\r\n        }\r\n        this.$store.commit('setCallingList',callingData)\r\n        this.$bus.$emit(`${type}-call`)\r\n        return\r\n      }\r\n      if(this.currentConversationType === this.TIM.TYPES.CONV_GROUP) {\r\n        this.showCallingMember = true\r\n      }\r\n      // this.$store.commit('pushCurrentMessageList', true)\r\n    },\r\n    handleEmojiShow () {\r\n      this.emojiShow = true\r\n      this.bigEmojiShow = false\r\n    },\r\n    handleBigEmojiShow(index) {\r\n      let elm = document.getElementById('bigEmojiBox')\r\n      elm && (elm.scrollTop = 0)\r\n      this.curItemIndex = index\r\n      this.curBigEmojiItemList = this.bigEmojiList[index].list\r\n      this.emojiShow = false\r\n      this.bigEmojiShow = true\r\n    },\r\n    chooseBigEmoji(item) {\r\n      this.popoverVisible = false\r\n      let message = this.tim.createFaceMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          index: this.curItemIndex + 1,\r\n          data: `${item}@2x`\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.$bus.$emit('scroll-bottom')\r\n      this.tim.sendMessage(message).catch(error => {\r\n        this.$store.commit('showMessage', {\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      })\r\n    },\r\n    reEditMessage(payload) {\r\n      this.messageContent = payload\r\n    },\r\n    handleUp() {\r\n      const index = this.memberList.findIndex(\r\n        member => member.userID === this.atUserID\r\n      )\r\n      if (index - 1 < 0) {\r\n        return\r\n      }\r\n      this.atUserID = this.memberList[index - 1].userID\r\n    },\r\n    handleDown() {\r\n      const index = this.memberList.findIndex(\r\n        member => member.userID === this.atUserID\r\n      )\r\n      if (index + 1 >= this.memberList.length) {\r\n        return\r\n      }\r\n      this.atUserID = this.memberList[index + 1].userID\r\n    },\r\n    handleEnter() {\r\n      this.sendTextMessage()\r\n    },\r\n    inputChange(value) {\r\n      if (this.currentConversationType === this.TIM.TYPES.CONV_GROUP && value.data === '@') {\r\n        this.groupAt = true\r\n        this.listTpye = 'groupAt'\r\n        this.showCallingMember = true\r\n      }\r\n      if (value.data === ' ' && this.messageContent.indexOf('@ ') !== -1) {\r\n        this.groupAt = false\r\n        this.listTpye = ''\r\n        this.showCallingMember = false\r\n      }\r\n    },\r\n    handleLine() {\r\n      this.messageContent += '\\n'\r\n    },\r\n    handlePaste(e) {\r\n      let clipboardData = e.clipboardData\r\n      let file\r\n      if (\r\n        clipboardData &&\r\n        clipboardData.files &&\r\n        clipboardData.files.length > 0\r\n      ) {\r\n        file = clipboardData.files[0]\r\n      }\r\n\r\n      if (typeof file === 'undefined') {\r\n        return\r\n      }\r\n      // 1. 创建消息实例，接口返回的实例可以上屏\r\n      let message = this.tim.createImageMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          file: file\r\n        },\r\n        onProgress: percent => {\r\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n\r\n      // 2. 发送消息\r\n      let promise = this.tim.sendMessage(message)\r\n      promise.catch(error => {\r\n        this.$store.commit('showMessage', {\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      })\r\n    },\r\n    dropHandler(e) {\r\n      e.preventDefault()\r\n      let file = e.dataTransfer.files[0]\r\n      let message = {}\r\n      if (file.type === 'video/mp4') {\r\n        message = this.tim.createVideoMessage({\r\n          to: this.toAccount,\r\n          conversationType: this.currentConversationType,\r\n          payload: {\r\n            file: file\r\n          },\r\n          onProgress: percent => {\r\n            this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n          }\r\n        })\r\n      } else {\r\n        message = this.tim.createFileMessage({\r\n          to: this.toAccount,\r\n          conversationType: this.currentConversationType,\r\n          payload: {\r\n            file: file\r\n          },\r\n          onProgress: percent => {\r\n            this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n          }\r\n        })\r\n      }\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.tim\r\n        .sendMessage(message)\r\n        .then(() => {\r\n          this.$refs.videoPicker.value = null\r\n        })\r\n        .catch(imError => {\r\n          this.$store.commit('showMessage', {\r\n            message: imError.message,\r\n            type: 'error'\r\n          })\r\n        })\r\n    },\r\n    sendTextMessage() {\r\n      if (\r\n        this.messageContent === '' ||\r\n        this.messageContent.trim().length === 0\r\n      ) {\r\n        this.messageContent = ''\r\n        this.$store.commit('showMessage', {\r\n          message: '不能发送空消息哦！',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      if (this.currentConversationType === this.TIM.TYPES.CONV_GROUP && this.groupAt) {\r\n        let message = this.tim.createTextAtMessage({\r\n          to: this.toAccount,\r\n          conversationType: this.TIM.TYPES.CONV_GROUP,\r\n          payload: {\r\n            text: this.messageContent,\r\n            atUserList: this.callingList // 'denny' 'lucy' 都是 userID，而非昵称\r\n          }\r\n        })\r\n        this.$store.commit('pushCurrentMessageList', message)\r\n        this.$bus.$emit('scroll-bottom')\r\n        this.tim.sendMessage(message).catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n        this.messageContent = ''\r\n        this.groupAt = false\r\n        return\r\n      }\r\n      const message = this.tim.createTextMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: { text: this.messageContent }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.$bus.$emit('scroll-bottom')\r\n      this.tim.sendMessage(message).catch(error => {\r\n        this.$store.commit('showMessage', {\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      })\r\n      this.messageContent = ''\r\n    },\r\n    sendCustomMessage() {\r\n      if (\r\n        this.form.data.length === 0 &&\r\n        this.form.description.length === 0 &&\r\n        this.form.extension.length === 0\r\n      ) {\r\n        this.$store.commit('showMessage', {\r\n          message: '不能发送空消息',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      const message = this.tim.createCustomMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          data: this.form.data,\r\n          description: this.form.description,\r\n          extension: this.form.extension\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.tim.sendMessage(message).catch(error => {\r\n        this.$store.commit('showMessage', {\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      })\r\n      Object.assign(this.form, {\r\n        data: '',\r\n        description: '',\r\n        extension: ''\r\n      })\r\n      this.sendCustomDialogVisible = false\r\n    },\r\n    random(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1) + min)\r\n    },\r\n    sendSurvey() {\r\n      const message = this.tim.createCustomMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          data: 'survey',\r\n          description: String(this.rate),\r\n          extension: this.suggestion\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      Object.assign(this.form, {\r\n        data: '',\r\n        description: '',\r\n        extension: ''\r\n      })\r\n      this.tim\r\n        .sendMessage(message)\r\n        .then(() => {\r\n          Object.assign(this, {\r\n            rate: 5,\r\n            suggestion: ''\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n      this.surveyDialogVisible = false\r\n    },\r\n    chooseEmoji(item) {\r\n      this.messageContent += item\r\n    },\r\n    handleSendImageClick() {\r\n      this.$refs.imagePicker.click()\r\n    },\r\n    handleSendFileClick() {\r\n      this.$refs.filePicker.click()\r\n    },\r\n    handleSendVideoClick() {\r\n      this.$refs.videoPicker.click()\r\n    },\r\n    groupLive() {\r\n      this.$store.commit('updateGroupLiveInfo', {\r\n        groupID: this.toAccount,\r\n        anchorID: this.userID,\r\n      })\r\n      this.$bus.$emit('open-group-live', { channel: 1 })\r\n    },\r\n    sendImage() {\r\n      const message = this.tim.createImageMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          file: document.getElementById('imagePicker') // 或者用event.target\r\n        },\r\n        onProgress: percent => {\r\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.tim\r\n        .sendMessage(message)\r\n        .then(() => {\r\n          this.$refs.imagePicker.value = null\r\n        })\r\n        .catch(imError => {\r\n          this.$store.commit('showMessage', {\r\n            message: imError.message,\r\n            type: 'error'\r\n          })\r\n        })\r\n    },\r\n    sendFile() {\r\n      const message = this.tim.createFileMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          file: document.getElementById('filePicker') // 或者用event.target\r\n        },\r\n        onProgress: percent => {\r\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.tim\r\n        .sendMessage(message)\r\n        .then(() => {\r\n          this.$refs.filePicker.value = null\r\n        })\r\n        .catch(imError => {\r\n          this.$store.commit('showMessage', {\r\n            message: imError.message,\r\n            type: 'error'\r\n          })\r\n        })\r\n    },\r\n    sendVideo() {\r\n      const message = this.tim.createVideoMessage({\r\n        to: this.toAccount,\r\n        conversationType: this.currentConversationType,\r\n        payload: {\r\n          file: document.getElementById('videoPicker') // 或者用event.target\r\n        },\r\n        onProgress: percent => {\r\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\r\n        }\r\n      })\r\n      this.$store.commit('pushCurrentMessageList', message)\r\n      this.tim\r\n        .sendMessage(message)\r\n        .then(() => {\r\n          this.$refs.videoPicker.value = null\r\n        })\r\n        .catch(imError => {\r\n          this.$store.commit('showMessage', {\r\n            message: imError.message,\r\n            type: 'error'\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" scoped>\r\n#message-send-box-wrapper {\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  padding: 3px 20px 20px 20px;\r\n}\r\n\r\n.emojis {\r\n  height: 160px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.emoji {\r\n  height: 40px;\r\n  width: 40px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.send-header-bar {\r\n  box-sizing: border-box;\r\n  padding: 3px 0 0 0;\r\n}\r\n\r\n.send-header-bar i {\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: gray;\r\n  margin: 0 12px 0 0;\r\n}\r\n\r\n.send-header-bar i:hover {\r\n  color: $black;\r\n}\r\n\r\ntextarea {\r\n  resize: none;\r\n}\r\n\r\n.text-input {\r\n  font-size: 16px;\r\n  width: 100%;\r\n  box-sizing: box-sizing;\r\n  border: none;\r\n  outline: none;\r\n  background-color: transparent;\r\n}\r\n\r\n.block {\r\n  padding: 10px 0;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.bottom {\r\n  padding-top: 10px;\r\n  position: relative;\r\n\r\n  .btn-send {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    color: $primary;\r\n    font-size: 30px;\r\n    right: 0;\r\n    bottom: -5px;\r\n    padding: 6px 6px 4px 4px;\r\n    border-radius: 50%;\r\n  }\r\n}\r\n.group-live-icon-box {\r\n    display inline-block\r\n    position relative\r\n    top 3px\r\n    width 25px\r\n    height 25px\r\n    margin-right 12px\r\n    .group-live-icon {\r\n      display inline-block\r\n      position absolute\r\n      top 0\r\n      left 0\r\n      width 25px\r\n      height 25px\r\n      background url('../../assets/image/live-icon.png') center no-repeat\r\n      background-size cover\r\n      z-index 2\r\n    }\r\n    .group-live-icon-hover {\r\n      display inline-block\r\n      position absolute\r\n      top 0\r\n      left 0\r\n      width 25px\r\n      height 25px\r\n      background url('../../assets/image/live-icon-hover.png') center no-repeat\r\n      background-size cover\r\n      z-index 1\r\n    }\r\n}\r\n.group-live-icon-box:hover {\r\n  .group-live-icon {\r\n    z-index 1\r\n  }\r\n  .group-live-icon-hover{\r\n    z-index 2\r\n  }\r\n}\r\n.calling-member-list {\r\n  position absolute\r\n  top 50px\r\n  background #fff\r\n  margin-right 20px\r\n  .calling-list-btn {\r\n    width 140px\r\n    display flex\r\n    float right\r\n    margin 10px 0\r\n    .calling-btn {\r\n      cursor pointer\r\n      padding 6px 12px\r\n      background #00A4FF\r\n      color #ffffff\r\n      font-size 14px\r\n      border-radius 20px\r\n      margin-left 13px\r\n    }\r\n  }\r\n}\r\n.el-popover {\r\n  padding: 12px 0 0 0 !important;\r\n}\r\n</style>\r\n"]}]}