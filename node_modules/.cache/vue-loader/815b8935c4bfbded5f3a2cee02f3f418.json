{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\views\\login\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\views\\login\\register.vue","mtime":1649691807268},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Indexbg from '@/components/loginpage/bg'\nimport Foot from '@/components/loginpage/footer'\n\nexport default {\n  components: {\n    Indexbg,\n    Foot\n  },\n  data() {\n    var validateUsername = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('用户名不能为空'))\n      } else {\n        callback()\n      }\n    }\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass')\n        }\n        callback()\n      }\n    }\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      ruleForm: {\n        username: '',\n        checkPass: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { validator: validateUsername, trigger: 'blur' }\n        ],\n        password: [\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPass: [\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n\n  },\n  methods: {\n    submitForm(formName) {\n      console.log(this.ruleForm)\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          console.log(this.ruleForm)\n          // alert('登录成功!');\n          this.$http\n            .get('/worker/register', { params:\n                {\n                  username: this.ruleForm.username,\n                  password: this.ruleForm.password,\n                  role: 3\n                }}, { emulateJSON: true })\n            .then((response) => {\n              console.log(response.data)\n              this.$router.push({\n                path: '/login'\n              })\n            }).catch(err => {\n              console.log(err.data)\n            })\n        } else {\n          alert('注册失败')\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n  }\n\n}\n",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"register.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"register\">\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" status-icon :rules=\"rules\" label-width=\"100px\" class=\"register-form\">\n        <div class=\"title-container\">\n          <p class=\"title\">注 册</p>\n        </div>\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"ruleForm.username\" type=\"text\" />\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"ruleForm.password\" type=\"password\" />\n        </el-form-item>\n        <el-form-item label=\"确定密码\" prop=\"checkPass\">\n          <el-input v-model=\"ruleForm.checkPass\" type=\"password\" />\n        </el-form-item>\n        <el-form-item class=\"button\">\n          <el-button style=\"margin-left: 30px;background-color: #6b705c\" type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n          <el-button style=\"margin-left: 80px;background-color: #b7b7a4\" @click=\"resetForm('ruleForm')\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <Foot />\n  </div>\n</template>\n\n<script>\nimport Indexbg from '@/components/loginpage/bg'\nimport Foot from '@/components/loginpage/footer'\n\nexport default {\n  components: {\n    Indexbg,\n    Foot\n  },\n  data() {\n    var validateUsername = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('用户名不能为空'))\n      } else {\n        callback()\n      }\n    }\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass')\n        }\n        callback()\n      }\n    }\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      ruleForm: {\n        username: '',\n        checkPass: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { validator: validateUsername, trigger: 'blur' }\n        ],\n        password: [\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        checkPass: [\n          { validator: validatePass2, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n\n  },\n  methods: {\n    submitForm(formName) {\n      console.log(this.ruleForm)\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          console.log(this.ruleForm)\n          // alert('登录成功!');\n          this.$http\n            .get('/worker/register', { params:\n                {\n                  username: this.ruleForm.username,\n                  password: this.ruleForm.password,\n                  role: 3\n                }}, { emulateJSON: true })\n            .then((response) => {\n              console.log(response.data)\n              this.$router.push({\n                path: '/login'\n              })\n            }).catch(err => {\n              console.log(err.data)\n            })\n        } else {\n          alert('注册失败')\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container{\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"../../assets/images/bg-4.jpg\");\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  .register{\n    background-color: rgb(107, 112, 92,0.4);\n    width: 30%;\n    margin: 200px auto;\n    height: 40%;\n    .register-form{\n      margin-right: 40px;\n      margin-bottom: 40px;\n      .title-container {\n        //position: relative;\n        .title {\n          font-size: 26px;\n          color: #606266;\n          margin: 0px auto 20px auto;\n          padding-top: 20px;\n          text-align: center;\n        }\n      }\n    }\n  }\n;\n}\n</style>\n"]}]}