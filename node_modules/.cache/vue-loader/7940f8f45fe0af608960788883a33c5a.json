{"remainingRequest":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-group-live-status.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\softwareDevelopment\\IM-Web\\src\\components\\message\\message-group-live-status.vue","mtime":1649851412194},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1649851455045},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649851454799},{"path":"D:\\project\\softwareDevelopment\\IM-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1649851455309}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'MessageGroupLiveStatus',\r\n  props: {\r\n    liveInfo: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      userID: state => state.user.userID\r\n    }),\r\n    cardTitle() {\r\n      return `${this.liveInfo.anchorName || this.liveInfo.anchorId}的直播`\r\n    },\r\n    cardContent() {\r\n      return Number(this.liveInfo.roomStatus) === 1 ? '正在直播' : '结束直播'\r\n    },\r\n    roomCover() {\r\n      return this.liveInfo.roomCover || 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png'\r\n    }\r\n  },\r\n  methods: {\r\n    async handleClick() {\r\n      const isExisting = await this.checkRoomExist()\r\n      const { roomId: roomID, anchorId: anchorID, roomName } = this.liveInfo\r\n      if (!isExisting) {\r\n        this.$store.commit('showMessage', {\r\n          message: '直播已结束',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      // 主播多实例登录时，点击卡片直接返回\r\n      if (anchorID === this.userID) {\r\n        this.$store.commit('showMessage', {\r\n          message: '您正在其它终端或者Web实例上开播，请勿重复开播！',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      this.$store.commit('updateGroupLiveInfo', {\r\n        groupID: this.toAccount,\r\n        roomID: roomID,\r\n        anchorID: anchorID,\r\n        roomName: roomName,\r\n      })\r\n      this.$bus.$emit('open-group-live',  { channel: 3 })\r\n    },\r\n    // 检查房间是否存在\r\n    async checkRoomExist() {\r\n      const checkRes = await axios ('https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=getRoomList&appId=1400187352&type=groupLive')\r\n      const list = (checkRes.data && checkRes.data.data) || []\r\n      const roomIDList = []\r\n      list.forEach(item => {\r\n        roomIDList.push(item.roomId)\r\n      })\r\n      return roomIDList.includes(this.liveInfo.roomId) \r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["message-group-live-status.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"message-group-live-status.vue","sourceRoot":"src/components/message","sourcesContent":["<template>\r\n  <div class=\"group-live-custom-message-card\" @click=\"handleClick\">\r\n    <p class=\"card-title\">{{cardTitle}}</p>\r\n    <p class=\"card-content\">{{cardContent}}</p>\r\n    <div class=\"card-footer\">\r\n      <img class=\"avatar\" :src=\"roomCover\" alt=\"\">\r\n      <span>群直播</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'MessageGroupLiveStatus',\r\n  props: {\r\n    liveInfo: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      userID: state => state.user.userID\r\n    }),\r\n    cardTitle() {\r\n      return `${this.liveInfo.anchorName || this.liveInfo.anchorId}的直播`\r\n    },\r\n    cardContent() {\r\n      return Number(this.liveInfo.roomStatus) === 1 ? '正在直播' : '结束直播'\r\n    },\r\n    roomCover() {\r\n      return this.liveInfo.roomCover || 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png'\r\n    }\r\n  },\r\n  methods: {\r\n    async handleClick() {\r\n      const isExisting = await this.checkRoomExist()\r\n      const { roomId: roomID, anchorId: anchorID, roomName } = this.liveInfo\r\n      if (!isExisting) {\r\n        this.$store.commit('showMessage', {\r\n          message: '直播已结束',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      // 主播多实例登录时，点击卡片直接返回\r\n      if (anchorID === this.userID) {\r\n        this.$store.commit('showMessage', {\r\n          message: '您正在其它终端或者Web实例上开播，请勿重复开播！',\r\n          type: 'info'\r\n        })\r\n        return\r\n      }\r\n      this.$store.commit('updateGroupLiveInfo', {\r\n        groupID: this.toAccount,\r\n        roomID: roomID,\r\n        anchorID: anchorID,\r\n        roomName: roomName,\r\n      })\r\n      this.$bus.$emit('open-group-live',  { channel: 3 })\r\n    },\r\n    // 检查房间是否存在\r\n    async checkRoomExist() {\r\n      const checkRes = await axios ('https://service-c2zjvuxa-1252463788.gz.apigw.tencentcs.com/release/forTest?method=getRoomList&appId=1400187352&type=groupLive')\r\n      const list = (checkRes.data && checkRes.data.data) || []\r\n      const roomIDList = []\r\n      list.forEach(item => {\r\n        roomIDList.push(item.roomId)\r\n      })\r\n      return roomIDList.includes(this.liveInfo.roomId) \r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.group-live-custom-message-card {\r\n  min-width: 160px;\r\n  max-width: 220px;\r\n  height 100px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  color: #000;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  // white-space: nowrap;\r\n\r\n  .card-title {\r\n    font-weight: 500;\r\n    margin: 0;\r\n  }\r\n  .card-content {\r\n    margin-bottom: 5px;\r\n    font-weight: 400;\r\n    border-bottom: 1px solid #e6e6e6;\r\n  }\r\n  .card-footer {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #8e8b8b;\r\n    font-weight: 400;\r\n    font-size: 13px;\r\n    .avatar {\r\n      width: 28px;\r\n      height: 28px;\r\n      border-radius: 50%;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}